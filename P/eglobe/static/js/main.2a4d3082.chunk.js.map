{"version":3,"sources":["sqMath.js","sqAnimation.js","App.js","sqMapProjections.js","serviceWorker.js","index.js"],"names":["τ","Math","PI","π","π_2","degrees","radians","abs","sin","cos","tan","sign","sqrt","log","pow","min","max","zero","v","epsilon","useAnimationTimer","duration","arguments","length","undefined","delay","_useState","useState","_useState2","Object","slicedToArray","elapsed","setTime","useEffect","animationFrame","timerStop","start","onFrame","Date","now","loop","requestAnimationFrame","timerDelay","setTimeout","cancelAnimationFrame","clearTimeout","pjt","sqMapProjections","_this","this","classCallCheck","projection","pt","equirectangular","get_culling","cull","set_culling","get_num_projections","pjt_list","normalize_pt","lg","ctr","lgM","is_orthographic","orthographic","get_orthographic_radius","get_range","get_border","get_projection_object","id","fn","find","el","set_tween","projection_last","prj","mercator","tween_pjt","end_tween","set_projection","obj","get_projection_name","name","set_location","lt","pjt1","pjt2","p1","p2","lerp_p","i","frac","interpolate_frac","r2","_this$normalize_pt","_this$normalize_pt2","φ","equal_earth","x","_this$normalize_pt3","_this$normalize_pt4","θ","asin","θ_2","θ_6","nicolosi_globular","_this$normalize_pt5","_this$normalize_pt6","λ","π_2λ","sinφ","cosφ","b","c","d","sgnλ","b2","d2","b2_d2a1","d2_b2a1","M","N","n","kavrayskiy_VII","_this$normalize_pt7","_this$normalize_pt8","_this$normalize_pt9","_this$normalize_pt10","Δλ","φ0","cosφ0","sinφ0","cosΔλ","bbox2viewBox","bbox","vF","toFixed","concat","svg_line","s","Number","isInteger","parseFloat","dx","dy","Topo2svg","props","mp","other","objectWithoutProperties","type","console","scale","transform","tranz","translate","color_num","fColor","lns","k","stitch_arcs","l","bClosed","n_pts","d_p","p_last","forEach","ac_id","bRemoveLast","bReverse","pts","arc","p","map","pos","slice","decode_arc","arcs","reverse","splice","arc2pts","line_string2path","ls","push","react_default","a","createElement","key","fill","polygon2path","pg","lr","geometry2svg","geometries","gm","hasOwnProperty","objects","className","MapBorder","cx","cy","r","B","move_pt","sgn","step","svg_latitude","y","x1","x2","Graticule","y_offset","Tropics","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","lat","Symbol","iterator","next","done","value","err","return","EventMove","mousedown","setMouseDown","_useState3","_useState4","mouse","setMouse","_moveStart","ev","touches","pageX","pageY","clientX","clientY","_move","move","_moveEnd","onMouseUp","onMouseMove","onMouseDown","onTouchStart","preventDefault","stopPropagation","onTouchMove","nativeEvent","stopImmediatePropagation","onTouchEnd","children","SvgMain","width","height","viewBox","world","in","stdDeviation","result","slope","filter","App_MapBorder","App_Graticule","App_Topo2svg","bCountries","strokeWidth","App_Tropics","GeoAniDemo","aniFrac","easingName","easing","linear","t","quadratic","cubic","elastic","inQuad","outQuad","inOutQuad","inCubic","outCubic","inOutCubic","inExpo","outExpo","useAnimation","App_SvgMain","GeoTest","_useState5","_useState6","count","setCount","_useState7","_useState8","toggleCountries","_useState9","_useState10","bCull","toggleCull","_useState11","_useState12","bAni","toggleAni","_useState13","_useState14","wh","setWH","_useState15","_useState16","loc","setLoc","document","title","App_EventMove","normalize","onClick","App_GeoAniDemo","App","App_GeoTest","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a4d3082.chunk.js","sourcesContent":["// Math definitions: Just for readability\n// https://github.com/d3/d3-geo/blob/master/src/math.js\n\n// consider degeneracy and robustness\n\nexport const τ    = Math.PI*2;\nexport const π    = Math.PI;\nexport const π_2  = Math.PI/2;\nexport const π_4  = Math.PI/4;\nexport const ε    = 1e-6;      // a small threshold value for the floating point computation\nexport const ε2   = 1e-12;\n\nexport const degrees = 180 / π;\nexport const radians = π / 180;\nexport const π_2xdegrees = 90;  // π/2 x degrees\nexport const abs   = Math.abs;\nexport const sin   = Math.sin;\nexport const cos   = Math.cos;\nexport const tan   = Math.tan;\nexport const sign  = Math.sign;\nexport const sqrt  = Math.sqrt;\nexport const pow   = Math.pow;\nexport const log   = Math.log;\n\nexport const min   = Math.min;\nexport const max   = Math.max;\n\nexport const zero    = v => abs(v) < ε;        // is virtually zero?\nexport const epsilon = v => zero(v) ? 0 : v;   // reduce an infinitesimal number to zero\n\n// to avoid NaN for the invalid domain ranges\nexport const asin = x => x > 1 ? π/2 : x < -1  ? -π/2 : Math.asin(x);\nexport const acos = x => x > 1 ? 0   : x < -1  ? π    : Math.acos(x);\n\nexport const haversin = x => (x = sin(x/2))*x;\nexport const range = (x, r1, r2) => min(max(x, r1), r2);  // let r1 ≦ x ≦ r2\n","import { useState, useEffect } from 'react';\n//\n// https://usehooks.com\nexport const useAnimation = (easingName='linear', duration=500, delay=0) => {\n  // Some easing functions copied from:\n  // https://github.com/streamich/ts-easing/blob/master/src/index.ts\n  // Hardcode here or pull in a dependency\n  const easing = {\n    linear     : t => t,\n    quadratic  : t => t * (((-t + 4) * t - 6) * t + 4),\n    cubic      : t => t * ((4 * t - 9) * t + 6),\n    elastic    : t => t * ((((33 * t - 106) * t + 126) * t - 67) * t + 15),\n    inQuad     : t => t * t,\n    outQuad    : t => t * (2 - t),\n    inOutQuad  : t => t <.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n    inCubic    : t => t * t * t,\n    outCubic   : t => (--t) * t * t + 1,\n    inOutCubic : t => t <.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\n    inExpo     : t => 2 ** (10*(t-1)),\n    outExpo    : t => -(2 ** (-10*t)) + 1,\n  };\n  // The useAnimationTimer hook calls useState every animation frame ...\n  // ... giving us elapased time and causing a rerender as frequently ...\n  // ... as possible for a smooth animation.\n  const elapsed = useAnimationTimer(duration, delay);\n  // Amount of specified duration elapsed on a scale from 0~1\n  const n = Math.min(1, elapsed/duration);\n  // Return altered value based on our specified easing function\n  return easing[easingName](n);  // property accessors\n}\n\nconst useAnimationTimer = (duration=1000, delay=0) => {\n  const [elapsed, setTime] = useState(0);\n\n  useEffect(() => {\n    let animationFrame, timerStop, start;\n\n    // Function to be executed on each animation frame\n    const onFrame = () => {\n      setTime(Date.now() - start);\n      loop();\n    }\n\n    // Call onFrame() on next animation frame\n    const loop = () => {\n      animationFrame = requestAnimationFrame(onFrame);\n    }\n\n    const onStart = () => {\n      // Set a timeout to stop things when duration time elapses\n      timerStop = setTimeout(() => {\n        cancelAnimationFrame(animationFrame);\n        setTime(Date.now() - start);\n      }, duration);\n\n      // Start the loop\n      start = Date.now();\n      loop();\n    }\n\n    // Start after specified delay (defaults to 0)\n    const timerDelay = setTimeout(onStart, delay);\n\n    // Clean things up\n    return () => {\n      clearTimeout(timerStop);\n      clearTimeout(timerDelay);\n      cancelAnimationFrame(animationFrame);\n    };\n  }, [duration, delay]);  // Only re-run effect if duration or delay changes\n\n  return elapsed;\n}\n","// TopoJSON to SVG\n// Optimize the performance by separating file load/parse/project(transform) from the rendering process\n// 1. First, load TopoJSON file and parse it, then convert to the Path Data\n//    that is an array of array of points (equirectangular coord.)\n// 2. Apply map projection to the Path Data.\n// 3. Apply Backface culling, windowing operations.\n// 4. Render (repeatedly when animate) the Path Data to SVG paths\n\n// Further Optimizations:\n// - Binary Space Partitions (BSP)\n// - Level of Detail (LOD), Line Simplification\n//\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport sqMapProjections from './sqMapProjections';\nimport { zero }         from './sqMath';\nimport { useAnimation } from './sqAnimation';\nimport world            from './map/110m.json';  // 110m.json, 50m.json\n//import timez    from './map/tz.topo.json';\n\n//const pt2λφ = (pt) => [radians * pt[0], radians * pt[1]];\n\n/*\nconst rotate_π = (p) => {\n  let p2 = p - 160;\n  if (p2 < -180)\n    p2 += 360;\n  return p2;\n}\n*/\n\nconst pjt = new sqMapProjections();\n\nconst map_size = bbox => bbox ? Math.min(bbox[2] - bbox[0], bbox[3] - bbox[1]) : 360;\n//const get_bbox = bbox => bbox ? bbox : [-180, -90, 180, 90];\n\nconst bbox2viewBox = bbox => {\n  if (!bbox)\n    return '-180 -90 360 180';\n  const vF = v => v.toFixed(2);\n  return `${vF(bbox[0])} ${vF(bbox[1])} ${vF(bbox[2] - bbox[0])} ${vF(bbox[3] - bbox[1])}`;\n}\n\n// Compact svg generator that checks if horizontal or vertical lines and uses relative coordinates\n// returns '' when no change in positions\nconst svg_line = (p1, p2) => {\n  const s = v => Number.isInteger(v) ? v : Number.parseFloat(v.toFixed(3));  // short number\n  if (p1 === null)\n    return 'M' + s(p2[0]) + ',' + s(p2[1]);  // starting point\n  const dx = p2[0] - p1[0];\n  const dy = p2[1] - p1[1];\n  if (zero(dx))  return (zero(dy)) ? '' : 'v' + s(dy);\n  if (zero(dy))  return (zero(dx)) ? '' : 'h' + s(dx);\n  return 'l' + s(dx) + ',' + s(dy);  // delta encode\n}\n\nconst Topo2svg = props => {\n  const {mp, ...other} = props;  // extract mp (map) only, and pass the other props for SVG\n\n  if (mp.type !== 'Topology') {\n    console.log('Invalid map: should be a topojson file.');\n    return null;\n  }\n  //const t0 = performance.now();\n\n  // initialize per map\n  const scale = mp.transform ? mp.transform.scale     : [1, 1];\n  const tranz = mp.transform ? mp.transform.translate : [0, 0];\n  let color_num = 0;\n  let fColor = ['Cornsilk', 'BlanchedAlmond', 'Bisque', 'NavajoWhite', 'Wheat', 'Burlywood', 'Tan', 'RosyBrown',\n                'SandyBrown', 'Goldenrod', 'DarkGoldenrod', 'Peru', 'Chocolate',\n                'SaddleBrown', 'Sienna', 'Brown', 'Maroon'];\n  let lns = [];\n  let k = 0;\n  //let countAll=0;  // debug\n  //let countOpt=0;\n  //let maxΔφ = 0;\n\n  // stitch multiple arcs\n  const stitch_arcs = (l, bClosed=true) => {\n    // arc to an array of points\n    const arc2pts = (ac_id, bRemoveLast=true) => {\n      // https://github.com/topojson/topojson-specification\n      const decode_arc = arc => {\n        let p = [0, 0];\n        return arc.map(pos => {\n          pos = pos.slice();\n          pos[0] = (p[0] += pos[0]) * scale[0] + tranz[0];  // rotate_π( \n          pos[1] = (p[1] += pos[1]) * scale[1] + tranz[1];\n          return pos;\n        });\n      }\n      const bReverse = (ac_id < 0);\n      const pts = decode_arc(mp.arcs[bReverse ? ~ac_id : ac_id]);\n      if (bReverse)\n        pts.reverse();\n     // countAll += pts.length;\n      if (bRemoveLast)  // remove redundancy\n        pts.splice(-1, 1);\n      return pts;\n    }\n\n    let n_pts = 0;\n    let d_p = '';\n    let p_last = null;\n    l.forEach(i =>\n      arc2pts(i).forEach(pt => {\n        const p = pjt.projection(pt);\n        if (!p[2]) {\n          d_p += svg_line(p_last, p);\n          p_last = p;\n          n_pts++;\n        }\n      })\n    );\n    if (n_pts < 2) {\n      return null;  // culled or invalid polygons\n    }\n    //countOpt += n_pts;\n    if (bClosed && (n_pts > 2)) {\n      d_p += 'Z';  // close\n    }\n    return d_p;\n  }\n\n  const line_string2path = ls => {\n    const d_p = stitch_arcs(ls, false);  // open path\n    if (d_p)\n      lns.push(<path key={k++} d={d_p} fill=\"none\" />);\n  }\n\n  // use a closed <path> instead of <polygon>\n  // inner polygons (counter-clockwise winding) follow after the first polygon\n  // Outer & Inner loop drawings: http://bl.ocks.org/mapsam/c76ed3ac3a79d9736dd7\n  // Most of data end with a single polygon.\n  const polygon2path = pg => {\n    let d_p = '';  // empty string\n    pg.forEach(lr => {    // for each LinearRing\n      const d = stitch_arcs(lr);\n      if (d)\n        d_p += d;\n    });\n    if (d_p)\n      lns.push(<path key={k++} d={d_p} fill={fColor[color_num % fColor.length]} />);\n  }\n\n  const geometry2svg = obj => {\n    if (!obj)\n      return;\n    switch (obj.type) {\n      case 'Point'             :\n      case 'MultiPoint'        :\n      case 'LineString'        : line_string2path(obj.arcs);                      break;\n      case 'MultiLineString'   : obj.arcs.forEach(ls => line_string2path(ls));    break;\n      case 'Polygon'           : polygon2path(obj.arcs);                          break;\n      case 'MultiPolygon'      : obj.arcs.forEach(pg => polygon2path(pg));        break;\n      case 'GeometryCollection': obj.geometries.forEach(gm => geometry2svg(gm));  break;\n      default:\n    }\n  /*\n    if (geom.hasOwnProperty(\"properties\") &&\n        geom.properties.hasOwnProperty(\"SOV_A3\") &&\n        geom.properties.SOV_A3 === 'JPN')\n      console.log(geom.properties);\n  */\n\n    // ISO 3166 country codes (249 countries)\n    if (obj.hasOwnProperty(\"id\")) {\n      color_num = obj.id % fColor.length;\n    }\n  }\n\n  // topo2svg\n  for (let key in mp.objects) {  // to access the unknown key\n    //if (mp.objects.hasOwnProperty(key)) {\n      //console.log(mp.objects[key]);\n      //console.log(mp.objects[key].type);\n    if (props.className) { // 'countries' or 'land'\n      if (key === props.className)\n        geometry2svg(mp.objects[key]);\n    }\n    else  // any key\n      geometry2svg(mp.objects[key]);\n  }\n\n  //console.log(\"Total points:\", countAll, \"Optimized:\", countOpt,\n  //  \"Reduced:\", `${((countAll-countOpt)/countAll).toFixed(2)}%`);\n  // console.log(\"maxΔφ=\", maxΔφ);\n  //const t1 = performance.now();\n  //console.log('topo2svg:', (t1-t0).toFixed(2), 'ms');\n\n  return <g {...other}>{lns}</g>;\n}\n\nconst MapBorder = props => {\n  if (pjt.is_orthographic()) {\n    return <circle className=\"map_border\" cx={0} cy={0} r={pjt.get_orthographic_radius()} />;\n  }\n  const B = pjt.get_border();\n  let pt = [B[0], B[1]];\n  let p_last = null;\n  let d_p = '';\n\n  const move_pt = (i, sgn) => {\n    let p = pjt.projection(pt);\n    d_p += svg_line(p_last, p);\n    p_last = p;  // use .slice() to clone the array\n    pt[i] += sgn * props.step;      // should be a divisor of 90, otherwise out of range trouble can happen\n  }\n\n  while (pt[0] < B[2]) move_pt(0,  1);\n  while (pt[1] < B[3]) move_pt(1,  1);\n  while (pt[0] > B[0]) move_pt(0, -1);\n  while (pt[1] > B[1]) move_pt(1, -1);\n  d_p += 'Z';\n  //console.log(d_p.length);\n\n  return <path className=\"map_border\" d={d_p} />;\n}\n\n/*\nconst GraticuleRect = (props) => {\n  const B = props.map.bbox;  // [-180, -90, 180, 90];\n  const W = B[2] - B[0];\n  const H = B[3] - B[1];\n  let d_p = ''; //\"M-180,0h360M0,-90v180M-180,-90h360M-180,-75h360\";\n  for (let x = B[0]; x <= B[2]; x += props.step)\n    d_p += `M${x},${B[1]}v${H}`;\n  for (let y = B[1]; y <= B[3]; y += props.step)\n    d_p += `M${B[0]},${y}h${W}`;\n  return <path stroke={props.stroke} strokeWidth={props.strokeWidth} fill='none' opacity=\".5\" d={d_p} />;\n}\n*/\n\nconst svg_latitude = (y, step, x1, x2) => {\n  let p_last = null;\n  let d_p = '';\n  for (let x = x1; x <= x2; x += step) {\n    let p = pjt.projection([x, y]);\n    if (!p[2]) {\n      d_p += svg_line(p_last, p);\n      p_last = p;\n    } else {\n      p_last = null;\n    }\n  }\n  return d_p;\n}\n\nconst Graticule = props => {\n  //const t0 = performance.now();\n  const B = pjt.get_range();\n  let d_p = '';\n  // Optimization needed: Build the mesh first and then convert to the svg data\n  // Longitude\n  for (let x = B[0]; x < B[2]; x += props.step) {\n    const y_offset = (x % 45) ? 15 : 0;  // insert offset except for each 45° of the latitude\n    let p_last = null;\n    for (let y = B[1]+y_offset; y <= B[3]-y_offset; y += props.step) {\n      let p = pjt.projection([x, y]);\n      if (!p[2]) {\n        d_p += svg_line(p_last, p);\n        p_last = p;\n      } else {\n        p_last = null;\n      }\n    }\n  }\n  // Latitude\n  for (let y = B[1] + props.step; y < B[3]; y += props.step)\n    d_p += svg_latitude(y, props.step, B[0], B[2]);\n  //const t1 = performance.now();\n  //console.log('Graticule:', (t1-t0).toFixed(2), 'ms');\n\n  return <path className=\"graticule\" d={d_p} />;\n}\n\n// Tropic of Cancer, Tropic of Capricorn: ±23.4368° of the equator\nconst Tropics = props => {\n  const B = pjt.get_range();\n  let d_p = '';\n  for (let y of props.lat)\n    d_p += svg_latitude(y, props.step, B[0], B[2]);\n  return <path className={props.className} d={d_p} />;\n}\n\nconst EventMove = props => {\n  const [mousedown,  setMouseDown] = useState(false);\n  const [mouse,      setMouse]     = useState({x: 0, y: 0});\n\n  const _moveStart = ev => {\n    const p = (ev.type === 'touchstart') ?\n      {x: ev.touches[0].pageX,\n       y: ev.touches[0].pageY} :\n      {x: ev.clientX,\n       y: ev.clientY};\n    setMouseDown(true);\n    setMouse(p);\n  }\n\n  const _move = ev => {\n    if (mousedown) {\n      const p = (ev.type === 'touchmove') ?\n        {x: ev.touches[0].pageX,\n         y: ev.touches[0].pageY} :\n        {x: ev.clientX,\n         y: ev.clientY};\n      props.move(p.x - mouse.x, p.y - mouse.y);\n      setMouse(p);\n    }\n  }\n\n  const _moveEnd = () => { setMouseDown(false); }\n    \n  const handleMouseDown = ev => { _moveStart(ev); }\n  const handleMouseMove = ev => { _move(ev); }\n  const handleMouseUp   = ev => { _moveEnd(); }\n\n  const handleTouchStart = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    _moveStart(ev);\n  }\n\n  const handleTouchMove = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();  // seems not working\n    ev.nativeEvent.stopImmediatePropagation();\n    _move(ev);\n  }\n  const handleTouchEnd = () => {\n    _moveEnd();\n  }\n\n  return (\n    <div\n      onMouseUp    = {handleMouseUp}\n      onMouseMove  = {handleMouseMove}\n      onMouseDown  = {handleMouseDown}\n      onTouchStart = {handleTouchStart}\n      onTouchMove  = {handleTouchMove}\n      onTouchEnd   = {handleTouchEnd}\n    > {props.children}\n    </div>\n  );\n}\n\nconst SvgMain = props =>\n  <svg width={props.width} height={props.height} viewBox={bbox2viewBox(world.bbox)} >\n    <defs>\n      <filter id='dropshadow' height=\"130%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1\" />\n        <feOffset dx=\"1\" dy=\"1\" result=\"offsetblur\" />\n        <feComponentTransfer>\n          <feFuncA type=\"linear\" slope=\"0.5\" />\n        </feComponentTransfer>\n        <feMerge>\n          <feMergeNode />\n          <feMergeNode in=\"SourceGraphic\" />\n        </feMerge>\n      </filter>\n    </defs>\n    <g filter=\"url(#dropshadow)\">\n      <MapBorder step={5} />\n      <Graticule step={5} />\n      <Topo2svg mp={world}\n        className={props.bCountries ? \"countries\" : \"land\"} strokeWidth={(map_size(world.bbox)/1000)}\n      />\n      <Tropics className=\"tropics\" lat={[-23.4368, 23.4368]} step={5} />\n      <Tropics className=\"tropic0\" lat={[0]} step={5} />\n    </g>\n  </svg>;\n\nconst GeoAniDemo = props => {\n  const aniFrac = useAnimation('inOutCubic', 5000, 0);  // easing: linear, inQuad, inCubic, elastic, inExpo, ...\n\n  pjt.set_tween();\n  //pjt.set_culling(true);\n  pjt.interpolate_frac(aniFrac);\n  if (aniFrac === 1) {\n    pjt.end_tween();\n  }\n\n  return (\n    <div>\n      <SvgMain bCountries={props.bCountries} width={props.width} height={props.height} />\n    </div>\n  );\n}\n\nconst GeoTest = props => {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count,      setCount]        = useState(1);\n  const [bCountries, toggleCountries] = useState(true);\n  const [bCull,      toggleCull]      = useState(true);\n  const [bAni,       toggleAni]       = useState(false);\n  const [wh,         setWH]           = useState(800);\n  //lg:139.6917+30, lt:35.6895   // Tokyo longitude, latitude of the projection center\n  //lg:-118.4912-40, lt:34.0195  // Santa Monica, CA\n  const [loc,        setLoc]       = useState({lg: 0, lt: 0}); \n\n  const move_loc = (dx, dy) => {\n    const normalize = a => {  // let the |degree| be contained within 360°\n      const s = v => Number.isInteger(v) ? v : Number.parseFloat(v.toFixed(3));  // short number\n      const aM = 360;\n      return s( (a < -aM) ? a + aM : ( (a > aM) ? a - aM : a ) );\n    }\n    setLoc({\n      lg: normalize(loc.lg - dx*.4),\n      lt: normalize(loc.lt + dy*.4)\n    });\n    pjt.set_location(loc.lg, loc.lt);\n  };\n\n  pjt.set_projection(count);\n  //pjt.set_location(loc.lg, loc.lt);\n  pjt.set_culling(bCull);\n  //pjt.set_location(loc.lg + aniFrac*(139.6917+30), loc.lt + aniFrac*35.6895);\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {  // run after every render!\n    // Update the document title using the browser API\n    document.title = pjt.get_projection_name();\n  }, [count]);  // Only re-run the effect if count changes\n\n  return (\n    <EventMove move={move_loc} >\n      <div>\n        <p className=\"report\" >{pjt.get_projection_name()}: {loc.lg}°, {loc.lt}°</p>\n        {!bAni && <button className=\"btnDemo\" onClick={() => setCount(count + 1)}>switch projection</button>}\n        <button className=\"btnDemo\" onClick={() => toggleCountries(!bCountries)}>{bCountries ? 'Land'        : 'Countries'}</button>\n        <button className=\"btnDemo\" onClick={() => toggleCull(!bCull)}>          {bCull      ? 'Transparent' : 'Opaque'}</button>\n        <button className=\"btnDemo\" onClick={() => toggleAni(!bAni)}>            {bAni       ? 'Map'         : 'Animation'}</button>\n        <button className=\"btnDemo\" onClick={() => setWH(wh > 100 ? wh-80 : wh)}> {'-'}</button>\n        <button className=\"btnDemo\" onClick={() => setWH(wh+80)}>                {'+'}</button>\n      </div>\n      {bAni  && <GeoAniDemo bCountries={bCountries} width={wh} height={wh} />}\n      {!bAni && <SvgMain    bCountries={bCountries} width={wh} height={wh} />}\n    </EventMove>\n  );\n}\n// https://stackoverflow.com/questions/48248512/svg-transform-rotate180-does-not-work-in-safari-11\n// SVG 1.1 <svg> elements did not support transform attributes. SVG 2 supports it but Safari does not yet do so. \n/*\n  const [bAni,      toggleAni]    = useState(true);\n  const aniFrac = useAnimation('inOutCubic', 3000, 0);  // easing: linear, inQuad, inCubic, elastic, inExpo, ...\n\n  if (bAni) {\n    pjt.interpolate_frac(aniFrac);\n  } else {\n    //pjt.set_location(loc.lg + aniFrac*(139.6917+30), loc.lt + aniFrac*35.6895);\n    pjt.set_location(loc.lg + aniFrac*(360-118.4912), loc.lt + aniFrac*(34.0195-50));\n  }\n\n      <button onClick={() => toggleAni(!bAni)}>{bAni ? 'Stop Animate' : 'Animate'}</button>\n\n  const [bShowTZ,    toggleTZ]        = useState(false);\n      <button onClick={() => toggleTZ(!bShowTZ)}>          {bShowTZ    ? 'Hide Time Zone' : 'Show Time Zone'}</button>\n        {bShowTZ &&\n        <Topo2svg mp={timez}\n          strokeWidth={.3} fill=\"none\" stroke=\"green\" opacity=\".3\"\n        />}\n*/\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <GeoTest />\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n          <linearGradient id=\"grad1\" x1=\"20%\" y1=\"30%\" x2=\"40%\" y2=\"80%\">\n            <stop offset=\"0%\"   stopColor=\"#B8D0DE\"></stop>\n            <stop offset=\"100%\" stopColor=\"#73A2BD\"></stop>\n          </linearGradient>\n        <defs>\n          <filter id='glow' x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\" colorInterpolationFilters=\"sRGB\">\n            <feGaussianBlur stdDeviation=\"30\" result=\"coloredBlur\" />\n            <feMerge>\n              <feMergeNode in=\"coloredBlur\" />\n              <feMergeNode in=\"SourceGraphic\" />\n            </feMerge>\n          </filter>\n        </defs>\n */\n","// Map Projections\nimport {\n  π, π_2, τ, π_2xdegrees,\n  degrees, radians,\n  abs, sign, zero, epsilon,\n  sin, cos, tan, asin,\n  log, sqrt,\n  range\n} from './sqMath';\n// https://github.com/d3/d3-geo\n\nexport default class sqMapProjections {\n  constructor() {\n    this.frac = 0;   // fraction 0..1 to interpolate between projections\n    this.pjt_list = [\n      {name: 'Equirectangular',              fn: this.equirectangular},\n      {name: 'Orthographic',                 fn: this.orthographic},\n      {name: 'Nicolosi Globular Projection', fn: this.nicolosi_globular},\n      {name: 'Kavrayskiy VII Projection',    fn: this.kavrayskiy_VII},\n      {name: 'Mercator Projection',          fn: this.mercator},\n      {name: 'Equal Earth Projection',       fn: this.equal_earth},\n    ];\n    this.ctr  = [0, 0];\n    this.cull = true;   // backface culling on by default\n  }\n\n  projection = pt => this.equirectangular(pt);\n\n  get_culling = () => this.cull;\n  set_culling = (cull) => this.cull = cull;\n\n  get_num_projections = () => this.pjt_list.length;\n\n  normalize_pt = pt => {\n    let lg = pt[0] - this.ctr[0];\n    let lt = -pt[1];// + this.ctr[1];\n    const lgM = 180;\n    if      (lg < -lgM) lg += lgM*2;\n    else if (lg >  lgM) lg -= lgM*2;\n    /*\n    if      (lg < -lgM) lg = -lgM;\n    else if (lg >  lgM) lg =  lgM;\n    */\n    return [lg, lt];\n  }\n\n  is_orthographic = () => (this.projection === this.orthographic); \n\n  get_orthographic_radius = () => π_2xdegrees;\n\n  get_range = () => [-180, -90, 180, 90];\n\n  get_border = () => [-180+this.ctr[0], -90, 180+this.ctr[0], 90];\n\n  get_projection_object = (id=null) => {\n    let fn = (id !== null) ? this.pjt_list[id % this.pjt_list.length].fn : this.projection;\n    return this.pjt_list.find(el => el.fn === fn);\n  }\n  \n  set_tween = () => {\n    this.projection_last = this.projection;\n    const prj = (this.projection === this.orthographic) ?  this.mercator : this.projection;\n    this.projection = pt => this.tween_pjt(prj, this.orthographic)(pt);\n    /*\n    this.projection = (this.projection_last === this.orthographic) ?\n       pt => this.tween_pjt(this.orthographic, this.mercator) :\n       pt => this.tween_pjt(this.projection_last, this.orthographic);\n    */\n  }\n\n  end_tween = () => {\n    this.projection = this.projection_last;\n  }\n\n  set_projection = id => {\n    let obj = this.get_projection_object(id);\n    if (obj) {\n      this.projection = obj.fn;         // set a new projection function\n    }\n  }\n\n  get_projection_name = id => {\n    let obj = this.get_projection_object(id);\n    return obj ? obj.name : \"N/A\";\n  }\n\n  set_location = (lg, lt) => { this.ctr = [lg, lt]; }\n  \n  // interpolate between two projections\n  tween_pjt = (pjt1, pjt2) => pt => {\n    const p1 = pjt1(pt);\n    const p2 = pjt2(pt);\n    const lerp_p = i => zero(p1[i]-p2[i]) ? p1[i] : (1 - this.frac) * p1[i] + this.frac * p2[i];\n    const cull = (this.frac >= .99) ? p2[2] : null;\n    return [lerp_p(0), lerp_p(1), cull];\n  }\n\n  interpolate_frac = frac => {\n    this.frac = frac;\n  }\n\n  // ## Equirectangular projection\n  equirectangular = pt => this.normalize_pt(pt);\n\n  // map projection  https://en.wikipedia.org/wiki/List_of_map_projections\n  // ## Mercator cylindrical, conformal projection\n  // x = R(λ - λ0), y = R ln[tan(π/4 + φ/2)]\n  mercator = pt => {\n    const [lg, lt] = this.normalize_pt(pt);\n    const threshold = 85; // 85.051129;\n    const φ = range(lt, -threshold, threshold) * radians;\n    return [ lg, log(tan(π/4 + φ/2)) * degrees ];\n  }\n\n  // ## The Equal Earth pseudocylindrical (equal-area) map projection\n  // ## by Bojan Šavrič, Bernhard Jenny, and Tom Patterson (2018) inspired by Robinson projection.\n  // ## https://www.researchgate.net/publication/326879978_The_Equal_Earth_map_projection\n  equal_earth = pt => {  // longitude(λ), latitude\n    const [lg, lt] = this.normalize_pt(pt); // keep degree unit since the result will be converted back to degree\n    const φ   = lt * radians;\n    const A1  = 1.340264;\n    const A2  = -.081106;\n    const A3  = .000893;\n    const A4  = .003796;\n    const θ   = asin( (sqrt(3) / 2) * sin(φ) );\n    const θ_2 = θ * θ;\n    const θ_6 = θ_2 ** 3;\n\n    return [ 2 * sqrt(3)*lg*cos(θ) / (3*(A1 + 3*A2*θ_2 + θ_6*(7*A3 + 9*A4*θ_2))),\n             θ*( A1 + A2*θ_2 + θ_6*(A3 + A4*θ_2) ) * degrees];\n  }\n\n  // ## Nicolosi globular projection, polyconic\n  nicolosi_globular = pt => {\n    const [lg, lt] = this.normalize_pt(pt);\n    const λ = lg * radians;\n    const φ = lt * radians;\n    const π_2λ  = π/(2*λ);\n    const sinφ = sin(φ);\n    const cosφ = cos(φ);\n\n    // https://beta.observablehq.com/@toja/nicolosi-globular-projection\n    if (λ === 0 || abs(φ) === π_2) return [0, φ * degrees];\n    else if (φ === 0)              return [λ * degrees, 0];\n    else if (abs(λ) === π_2)       return [λ*cosφ * degrees, sinφ * π_2xdegrees];\n\n    const b       = π_2λ - (1/π_2λ);\n    const c       = 2*φ/π;\n    const d       = (1 - c*c) / (sinφ - c);\n    const sgnλ    = sign(λ);\n    const b2      = b*b;\n    const d2      = d*d;\n    const b2_d2   = b2/d2;\n    const d2_b2   = d2/b2;\n    const b2_d2a1 = b2_d2 + 1;\n    const d2_b2a1 = d2_b2 + 1;\n    const M = (b *sinφ/d  - b/2) / b2_d2a1;\n    const N = (d2*sinφ/b2 + d/2) / d2_b2a1;\n    const n = N*N - (d2*sinφ*sinφ/b2 + d*sinφ - 1)/d2_b2a1;\n\n    return [ (M + sqrt( M*M + cosφ*cosφ/b2_d2a1 )  * sgnλ) * π_2xdegrees,\n             (N + sqrt( n < 0 ? 0 : n ) * sign(-φ*b) * sgnλ) * π_2xdegrees ];\n  }\n\n  // Kavrayskiy VII pseudocylindrical, compromise projection\n  kavrayskiy_VII = pt => {\n    const [lg, lt] = this.normalize_pt(pt);\n    const λ = lg * radians;\n    const φ = lt * radians;\n\n    return [ 3*λ/τ * sqrt(π*π/3 - φ*φ) * degrees, lt ];\n  }\n\n  // https://en.wikipedia.org/wiki/Orthographic_projection_in_cartography\n  orthographic = pt => {\n    //const outer = (p >= -180 && p < -90) || (p > 90 && p <= 180);\n    //const outer = (p < -90) || (p > 90);\n    const [lg, lt] = this.normalize_pt(pt);\n    const Δλ = lg * radians;\n    const φ  = lt * radians;\n    const φ0 = -this.ctr[1] * radians;\n    const cosφ  = cos(φ);\n    const cosφ0 = cos(φ0);\n    const sinφ  = sin(φ);\n    const sinφ0 = sin(φ0);\n    const cosΔλ = cos(Δλ);\n    // dot product with the normal (to the screen) =\n    // (cosφ0cosλ0, cosφ0sinλ0, sinφ0)・(cosφcosλ, cosφsinλ, sinφ)\n    // sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ\n    const cull = this.cull ? ( (sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ < 0) ? true : null ) : null;\n    return [ epsilon(  cosφ  * sin(Δλ) * π_2xdegrees ),\n             epsilon( (cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * π_2xdegrees ), cull];\n  }\n}  // class sqMapProjections\n\n/*\n// Stab-Werner Pseudoconical, Equal-area, Equidistant\nexport const pjt_stab-werner = (pt) => {\n  \n}\n\n// Mollweide (elliptical, Babinet, homolographic) Pseudocylindrical, Equal-area projection\nexport const pjt_Mollweide = (pt) => {\n  const λ = pt[0] * radians;\n  const φ = pt[1] * radians;\n  const sqrt2 = sqrt(2);\n  const θ = asin()\n\n  return [ (2*sqrt2/π) * λ*Math.cos(θ) * degrees,\n           (sqrt2 * Math.sin(θ)) * degrees];\n}\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}