{"version":3,"sources":["sq3D.js","App.js","sqAni.js","serviceWorker.js","index.js"],"names":["Vertex","x","y","z","this","Vertex2D","projectOrthographic","M","r","arguments","length","undefined","projectPerspective","XyzPlanes","c","side","colors","d","vtcs","faces","Cube","Pyramid","ds","dh","Circle3D","_this","N","addVertex","push","f","v","th","th2","Math","PI","dth","r_cosTh","cos","r_sinTh","sin","j","q","id","Cylinder","_this2","addVertices","addFaces","i","Graphic3D","props","_this3","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","paint","bind","assertThisInitialized","t0","performance","now","_this$props","width","height","data","ctx","refs","canvas","getContext","W","H","lineWidth","globalAlpha","ctr","bPerspective","project","objects","rad","dZoom","radTh","radPh","theta","phi","cosTh","sinTh","cosPh","sinPh","forEach","obj","rotate3D","nVtcs","dx","dy","clearRect","object","face","P","beginPath","moveTo","lineTo","fillStyle","fill","closePath","stroke","render3D","t1","prof","interval","concat","round","toFixed","font","textAlign","textBaseline","fillText","_this$props2","react_default","a","createElement","ref","React","Component","App","WrappedCom","init","change","cRainbow","cPurples","cGreens","cRGBs","AniGraphic3D","_React$Component","_class","lastTS","tick","state","inherits","createClass","key","value","_frameId","requestAnimationFrame","window","cancelAnimationFrame","timestamp","setState","assign","DemoGraphic3D","_ref","react","c2","c3","className","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8fb6f7b9.chunk.js","sourcesContent":["// Soomin K., SpacetimeQ 3D Library\n// https://www.sitepoint.com/building-3d-engine-javascript/\n\n// Arrow functions are designed to be \"throwaway\" functions,\n// and so cannot be used to define new types.\nexport const Vertex = function(x, y, z) {\n  //this.x = parseFloat(x);\n  //this.y = parseFloat(y);\n  //this.z = parseFloat(z);\n  this.x = x;\n  this.y = y;\n  this.z = z;\n}\n\nexport const Vertex2D = function(x, y) {\n  //this.x = parseFloat(x);\n  //this.y = parseFloat(y);\n  this.x = x;\n  this.y = y;\n}\n\n// Orthographic projection\n// d is a zoom factor, if d = 200, zoom in 200%\nexport const projectOrthographic = (M, d=100) => {\n  const r = d/100;\n  return (r === 1) ? new Vertex2D(  M.x,   M.z) :\n                     new Vertex2D(r*M.x, r*M.z);\n}\n\n// Perspective view\n// d: projection plane's distance from the camera\n// As d becomes larger, the object view becomes also larger.\nexport const projectPerspective = (M, d=100) => {\n  const r = d/M.y;   // y-axis defined as the opposite direction of the view\n  return new Vertex2D(r*M.x, r*M.z);\n}\n\nexport const rotate3D = (objects, ctr, theta, phi) => {\n  const cosTh = Math.cos(theta);\n  const sinTh = Math.sin(theta);\n  const cosPh = Math.cos(phi);\n  const sinPh = Math.sin(phi);\n\n  objects.forEach(obj => {\n    obj.vtcs.forEach(v => {\n      // orient to the center\n      const x = v.x - ctr.x;\n      const y = v.y - ctr.y;\n      const z = v.z - ctr.z;\n      // [ cos(th), -sin(th)cos(ph),  sin(th)sin(ph) ]\n      // [ sin(th),  cos(th)cos(ph), -cos(th)sin(ph) ]\n      // [       0,         sin(ph),         cos(ph) ]\n      v.x = ctr.x + cosTh*x - sinTh*cosPh*y + sinTh*sinPh*z;\n      v.y = ctr.y + sinTh*x + cosTh*cosPh*y - cosTh*sinPh*z;\n      v.z = ctr.z +                 sinPh*y +       cosPh*z;\n    })\n  })\n}\n","// Soomin K., SpacetimeQ\n// https://www.sitepoint.com/building-3d-engine-javascript/\n\nimport React, { Fragment } from 'react';\nimport './App.css';\n\nimport { Animate } from './sqAni';\nimport {\n  Vertex,\n  projectOrthographic,\n  projectPerspective,\n  rotate3D\n} from './sq3D';\n\nconst XyzPlanes = function(c, side, colors) {\n  const d = side;\n\n  this.vtcs = [\n    new Vertex(c.x,   c.y,   c.z),\n    new Vertex(c.x+d, c.y,   c.z),\n    new Vertex(c.x+d, c.y+d, c.z),\n    new Vertex(c.x,   c.y+d, c.z),\n    new Vertex(c.x,   c.y+d, c.z+d),\n    new Vertex(c.x,   c.y,   c.z+d),\n    new Vertex(c.x+d, c.y,   c.z+d)\n  ];\n\n  this.faces = [\n    [this.vtcs[0], this.vtcs[1], this.vtcs[2], this.vtcs[3]],\n    [this.vtcs[0], this.vtcs[3], this.vtcs[4], this.vtcs[5]],\n    [this.vtcs[0], this.vtcs[1], this.vtcs[6], this.vtcs[5]]\n  ];\n\n  this.colors = colors;\n}\n\nconst Cube = function(c, side, colors) {\n  // Generate the vertices\n  const d = side/2;\n\n  this.vtcs = [\n    new Vertex(c.x-d, c.y-d, c.z+d),\n    new Vertex(c.x-d, c.y-d, c.z-d),\n    new Vertex(c.x+d, c.y-d, c.z-d),\n    new Vertex(c.x+d, c.y-d, c.z+d),\n    new Vertex(c.x+d, c.y+d, c.z+d),\n    new Vertex(c.x+d, c.y+d, c.z-d),\n    new Vertex(c.x-d, c.y+d, c.z-d),\n    new Vertex(c.x-d, c.y+d, c.z+d)\n  ];\n\n  // Generate the faces\n  this.faces = [\n    [this.vtcs[0], this.vtcs[1], this.vtcs[2], this.vtcs[3]],\n    [this.vtcs[3], this.vtcs[2], this.vtcs[5], this.vtcs[4]],\n    [this.vtcs[4], this.vtcs[5], this.vtcs[6], this.vtcs[7]],\n    [this.vtcs[7], this.vtcs[6], this.vtcs[1], this.vtcs[0]],\n    [this.vtcs[7], this.vtcs[0], this.vtcs[3], this.vtcs[4]],\n    [this.vtcs[1], this.vtcs[6], this.vtcs[5], this.vtcs[2]]\n  ];\n\n  this.colors = colors;\n}\n\nconst Pyramid = function(c, side, colors) {\n  const ds = side/2;\n  const dh = side/3;\n\n  this.vtcs = [\n    new Vertex(c.x - ds, c.y - ds, c.z - dh),\n    new Vertex(c.x + ds, c.y - ds, c.z - dh),\n    new Vertex(c.x + ds, c.y + ds, c.z - dh),\n    new Vertex(c.x - ds, c.y + ds, c.z - dh),\n    new Vertex(c.x,      c.y,      c.z + 2*dh)\n  ];\n\n  this.faces = [\n    [this.vtcs[0], this.vtcs[1], this.vtcs[2], this.vtcs[3]],\n    [this.vtcs[0], this.vtcs[1], this.vtcs[4]],\n    [this.vtcs[1], this.vtcs[2], this.vtcs[4]],\n    [this.vtcs[2], this.vtcs[3], this.vtcs[4]],\n    [this.vtcs[3], this.vtcs[0], this.vtcs[4]]\n  ];\n\n  this.colors = colors;\n}\n\nconst Circle3D = function(c, r, colors, N=368/4) {  // N slices per quarter\n  this.vtcs  = [];\n  this.faces = [];\n  const addVertex = (x, y, z) => {\n    this.vtcs.push(new Vertex(c.x + x, c.y + y, c.z + z));\n  }\n  addVertex(0, 0, 0);\n  let faces = [];\n  for (let f=0; f < 4; f++) {\n    faces.push([this.vtcs[0]]);\n  }\n  let v=1;\n  for (let th=0, th2=Math.PI/2, dth=th2/N; th < th2; th += dth) {\n    const r_cosTh = r*Math.cos(th);\n    const r_sinTh = r*Math.sin(th);\n    addVertex( r_cosTh,  r_sinTh, 0);\n    addVertex(-r_cosTh,  r_sinTh, 0);\n    addVertex(-r_cosTh, -r_sinTh, 0);\n    addVertex( r_cosTh, -r_sinTh, 0);\n    for (let j=0; j < 4; j++)\n      faces[j].push(this.vtcs[v++]);\n  }\n  addVertex(0,  r, 0);  // add closing vertex for the quadrant I, II\n  addVertex(0, -r, 0);  // for the quadrant III, IV\n  for (let q=0; q < 4; q++) {\n    const id = (q < 2) ? this.vtcs.length-2 : this.vtcs.length-1;\n    faces[q].push(this.vtcs[id]);\n    this.faces.push(faces[q]);\n  }\n  this.colors = colors;\n}\n\nconst Cylinder = function(c, r, colors, N=72/4) {  // N slices per quarter\n  this.vtcs  = [];\n  this.faces = [];\n  const addVertices = (x, y, z) => {\n    this.vtcs.push(new Vertex(c.x + x, c.y + y, c.z + z + r/10));\n    this.vtcs.push(new Vertex(c.x + x, c.y + y, c.z + z - r/10));\n  }\n  const addFaces = (i) => {\n    for (let q=0; q < 4; q++) {\n      this.faces.push([\n        this.vtcs[2*q+8*(i-1)],\n        this.vtcs[2*q+8*(i-1)+1],\n        this.vtcs[2*q+8*i+1],\n        this.vtcs[2*q+8*i]\n      ]);\n    }\n  }\n  for (let i=0, th=0, th2=Math.PI/2, dth=th2/N; i <= N; i++, th += dth) {\n    const r_cosTh = r*Math.cos(th);\n    const r_sinTh = r*Math.sin(th);\n    addVertices( r_cosTh,  r_sinTh, 0); // 0,1   8,9   16,17\n    addVertices(-r_cosTh,  r_sinTh, 0); // 2,3  10,11  18,19\n    addVertices(-r_cosTh, -r_sinTh, 0); // 4,5  12,13  20,21\n    addVertices( r_cosTh, -r_sinTh, 0); // 6,7  14,15  22,23\n    if (i > 0) {\n      addFaces(i);\n    }\n  }\n  this.colors = colors;\n}\n\n// Vertex based rendering\n// objects: a list of 3D objects\n//   3D object: has {vtcs, faces, colors}\n//     vtcs:  a list of vertices; vertice: a tuple (x, y, z)\n//     faces: a list of faces;    face: an array vertices that form a face\nconst render3D = (objects, ctx, dx, dy, project, d=100) => {\n  // Clear the previous frame\n  ctx.clearRect(0, 0, 2*dx, 2*dy);\n  let nVtcs=0;  // for profiling\n  objects.forEach(object => {  // check the performance issue compared to the for loop\n    object.faces.forEach((face, i) => {  // for each faces in the object, that is a array of face\n      for (let i=0; i < face.length; i++) {  // loop through the array of vertices\n        let P = project(face[i], d);\n        let x =  P.x + dx;\n        let y = -P.y + dy;\n        if (i === 0) {\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n          // if (nVtcs % 10 === 0)\n          // ctx.fillText(nVtcs, x, y);\n        }\n      }\n      ctx.fillStyle = object.colors[i % object.colors.length];\n      ctx.fill();\n      ctx.closePath();\n      ctx.stroke();\n      nVtcs += face.length;  // for profiling\n    })\n  })\n  return nVtcs;  // for profiling\n}\n\n// Code reuse by Render Props (-> objects props)\nclass Graphic3D extends React.Component {\n  constructor(props) {\n    super(props);\n    this.paint = this.paint.bind(this);\n  }\n\n  componentDidMount() {\n    this.paint();\n  }\n\n  componentDidUpdate() {\n    this.paint();\n  }\n\n  paint() {\n    // ############ Profiling BEGIN\n    const t0 = performance.now();\n    // ############ Profiling END\n    const { width, height, data } = this.props;\n    const ctx = this.refs.canvas.getContext(\"2d\");\n    const W = width / 2;\n    const H = height / 2;\n\n    //ctx.strokeStyle = 'rgba(0, 0, 0, 0.9)';\n    ctx.lineWidth   = 1;\n    ctx.globalAlpha = 0.7;\n\n    const ctr = new Vertex(0, 1.2*H, 0);  // ctr.y should not be 0\n    const bPerspective = (this.props.project === projectPerspective);\n    const objects = this.props.objects(ctr, H);  // kind of Render Props\n\n    const rad   = Math.PI*data/180;\n    let dZoom = 80+40*Math.sin(rad);\n    if (bPerspective) {  // In Perspective Projection, zooming effect is dependent on the object size units\n      dZoom *= width/250;\n    }\n    let radTh = 0;\n    let radPh = 0;\n    if (data < 360*2) {  // first two cycles\n      radTh = rad;\n      radPh = rad;\n    }\n    else if (data < 360*3) {\n      radPh = rad;\n    }\n    else {\n      radTh = rad;\n    }\n    rotate3D(objects, ctr, -radTh, radPh);\n    const nVtcs = render3D(objects, ctx, W, H, this.props.project, dZoom);\n\n    // ############ Profiling BEGIN\n    const t1 = performance.now();\n    let prof = this.props.interval ? `${Math.round(1000/this.props.interval)}fps,` : '';\n    prof += `${nVtcs}vtcs,` +\n            `${(t1-t0).toFixed(2)}ms,` +\n            `${Math.round(dZoom)}%,` +\n            `${(data % 360).toFixed(1)}°`;\n    ctx.font         = 'bold 8pt Courier New';\n    ctx.textAlign    = 'center';\n    ctx.textBaseline = 'top';\n    ctx.fillStyle    = 'rgba(127,0,0,1)';\n    ctx.fillText(bPerspective ?\n      \"< Perspective Projection >\" :\n      \"- Orthographic Projection -\", W, 0);\n    ctx.textBaseline = 'bottom';\n    ctx.fillStyle    = 'rgba(0,0,0,1)';\n    ctx.fillText(prof, W, height);\n    // ############ Profiling END\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <canvas ref=\"canvas\" width={width} height={height} />\n    );\n  }\n}\n\nclass App extends React.Component {\n  render() {\n    // palette\n    const cRainbow  = [\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Indigo\", \"Violet\",\n      \"LightSteelBlue\", \"PowderBlue\", \"LightBlue\", \"SkyBlue\", \"LightSkyBlue\", \"DeepSkyBlue\", \"DodgerBlue\",\n      \"CornflowerBlue\", \"SteelBlue\", \"RoyalBlue\", \"Blue\", \"MediumBlue\", \"DarkBlue\", \"Navy\", \"MidnightBlue\",\n      \"Lavender\", \"Thistle\", \"Plum\", \"Violet\", \"Orchid\", \"Fuchsia\", \"Magenta\", \"MediumOrchid\", \"MediumPurple\",\n      \"BlueViolet\", \"DarkViolet\", \"DarkOrchid\", \"DarkMagenta\", \"Purple\", \"Indigo\", \"DarkSlateBlue\",\n      \"SlateBlue\", \"MediumSlateBlue\"];\n    const cPurples  = [\"Thistle\", \"Orchid\", \"Fuchsia\", \"Purple\", \"DarkSlateBlue\", \"MediumSlateBlue\"];\n    const cGreens   = [\"Olive\", \"LimeGreen\", \"SpringGreen\", \"DarkSeaGreen\", \"ForestGreen\", \"DarkGreen\"];\n    const cRGBs     = [\"Red\", \"Green\", \"Blue\", \"Cyan\", \"Yellow\"];\n    const AniGraphic3D = Animate(Graphic3D, 0.0, data => {\n      if (data > 360*4) return 0;  // reset\n      return (data + 1);  // change in degree\n    });\n    const cw=400;\n    const ch=cw;\n    const fps=30;\n\n    const DemoGraphic3D = ({project}) =>\n      <Fragment>\n        <AniGraphic3D\n          project={project}\n          objects={(ctr, H) => {\n            return [\n              new Cube(ctr, H,      cRainbow),\n              new Cube(ctr, H/1.5,  cPurples),\n              new Cube(ctr, H/2,    cGreens),\n              new Pyramid(ctr, H/3, cPurples)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n        <AniGraphic3D\n          project={project}\n          objects={(ctr, H) => {\n            return [\n              new XyzPlanes(ctr, H*2/3, cRainbow),\n              new Pyramid(ctr, H,   cGreens),\n              new Pyramid(ctr, H/2, cPurples),\n              new Cube(ctr,    H/5, cRGBs)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n        <AniGraphic3D\n          project={project}\n          objects={(ctr, H) => {\n            return [\n              new XyzPlanes(ctr, H*2/3, cRGBs),\n              new XyzPlanes(ctr, H/5, cPurples),\n              new Pyramid(ctr,   H/20, cRGBs)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n        <AniGraphic3D\n          project={project}\n          objects={(ctr, H) => {\n            const c2 = new Vertex(0, 1.2*H,  H/4);\n            const c3 = new Vertex(0, 1.2*H, -H/4);\n            return [\n              new XyzPlanes(ctr, H/2, cRGBs),\n              new Circle3D(c2,  H/2,  cGreens),\n              new Circle3D(ctr, H,    cPurples),\n              new Circle3D(c3,  H/2,  cRainbow)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n        <AniGraphic3D\n          project={project}\n          objects={(ctr, H) => {\n            return [\n              new XyzPlanes(ctr, H/6, cRGBs),\n              new Cylinder(ctr,  H*14/15,  cRainbow)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n        <AniGraphic3D\n          project={project}\n          objects={(ctr, H) => {\n            return [\n              new Circle3D(ctr, H/12, cRGBs, 12/4),\n              new Cylinder(ctr,  H/4,  cRainbow, 1),\n              new Cylinder(ctr,  H/3,  cRainbow, 2),\n              new Cylinder(ctr,  H/2,  cRainbow, 12/4),\n              new Cylinder(ctr,  H/1.3,  cRainbow, 24/4),\n              new Cylinder(ctr,  H*14/15,  cRainbow, 72/4)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n      </Fragment>;\n/*\n    const StaticGraphic3D = () =>\n      <Fragment>\n        <Graphic3D\n          project={projectPerspective}\n          objects={(ctr, H) => {\n            return [\n              new Circle3D(ctr, H/12, cRGBs),\n              new Cylinder(ctr,  H*14/15,  cRainbow)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          data={360*2+90}\n        />\n        <Graphic3D\n          project={projectPerspective}\n          objects={(ctr, H) => {\n            return [\n              new Circle3D(ctr, H/12, cRGBs, 12/4),\n              new Cylinder(ctr,  H/4,  cRainbow, 1),\n              new Cylinder(ctr,  H/3,  cRainbow, 2),\n              new Cylinder(ctr,  H/2,  cRainbow, 12/4),\n              new Cylinder(ctr,  H/1.3,  cRainbow, 24/4),\n              new Cylinder(ctr,  H*14/15,  cRainbow, 72/4)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          data={360*2+90}\n        />\n        <Graphic3D\n          project={projectPerspective}\n          objects={(ctr, H) => {\n            return [\n              new Circle3D(ctr, H/12, cRGBs),\n              new Cylinder(ctr,  H*14/15,  cRainbow)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          data={360*2+10}\n        />\n        <Graphic3D\n          project={projectOrthographic}\n          objects={(ctr, H) => {\n            return [\n              new Circle3D(ctr, H/12, cRGBs),\n              new Cylinder(ctr,  H*14/15,  cRainbow)\n            ];\n          }}\n          width={cw}\n          height={ch}\n          data={360*2+10}\n        />\n      </Fragment>;\n*/\n    return (\n      <div className=\"App\">\n        <DemoGraphic3D project={projectOrthographic} />\n        <DemoGraphic3D project={projectPerspective} />\n      </div>\n    );\n  }\n}\n\n// <StaticGraphic3D /> \nexport default App;\n","// Soomin K., SpacetimeQ\n// SpacetimeQ Animation Library\n\nimport React from 'react';\n\n// HOC that adds an animation facility to a component.\n// Provide a new prop, data, that the wrapped component uses to render its output.\n// Ex) const AnimateGraphic3D = Animate(Graphic3D, 0, (data => {data += 0.5}));\nexport const Animate = (WrappedCom, init, change) => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.lastTS = 0;\n      this.tick = this.tick.bind(this);\n      this.state = {\n        data: init   // initial value of the data\n      }\n    }\n\n    componentDidMount() {\n      if (!this._frameId)\n        this._frameId = requestAnimationFrame(this.tick);\n    }\n\n    componentWillUnmount() {\n      window.cancelAnimationFrame(this._frameId);\n    }\n\n    tick(timestamp) {\n      let elapsed = timestamp - this.lastTS;\n      if (elapsed < this.props.interval) { // skip the loop for this tick\n        this._frameId = requestAnimationFrame(this.tick);\n        return;\n      }\n      this.lastTS = timestamp;\n      this.setState({ data: change(this.state.data) });  // callback with data\n      this._frameId = requestAnimationFrame(this.tick);\n    }\n\n    render() {\n      // renders the wrapped component with the fresh data!\n      // pass through any additional props\n      return <WrappedCom data={this.state.data} {...this.props} />;\n    }\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}