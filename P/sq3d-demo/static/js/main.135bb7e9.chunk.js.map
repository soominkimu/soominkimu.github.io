{"version":3,"sources":["sqUtil.js","sq3D.js","sq3DObj.js","WeatherUtil.js","palette.js","App.js","sqAni.js","serviceWorker.js","index.js"],"names":["deg2rad","deg","Math","PI","rad2deg","rad","sq3DContext","ctx","center","scrSize","_this","this","projMode","arguments","length","undefined","dZoom","Object","classCallCheck","getCenter","ctr","getProjMode","setZoom","zoom","clearScreen","clearRect","scr","x","y","vtxRemoveCtr","v","z","rotate3D","theta","phi","cosTh","cos","sinTh","sin","cosPh","sinPh","rotM","rotateVertex","vertex","rot3Dproj2D","r","x2","z2","scrXY","scrCtr","render3DG","graph","gS","stroke","palette","R","dth","dph","th2","ph2","nVtcs","ph","P","th","strokeStyle","beginPath","moveTo","lineTo","closePath","fillStyle","fill","render3D","objects","forEach","object","colors","bDrawVertices","i","vtcs","w","arc","faces","face","k","bDrawLinesOnly","lineWidth","color","rotate3DVertex","cWhite50","Disk","c","N","push","r_sinTh","console","log","Cylinder","dh","dz","Stars","d_cst","d_lns","findVtcs","id","key","hasOwnProperty","s","mAdj","pow","graphSphere","iLast","parseInt","l","a","idx","Graph","R_cosPh","scaleRange","min","max","itemPercent","item","Number","toFixed","cT","cGray","cSeasons","cWeekly","cStars","cSun","Graphic3D","props","possibleConstructorReturn","getPrototypeOf","call","_moveStart","ex","ey","mousedown","mouse","_move","paint","_moveEnd","handleMousedown","ev","clientX","clientY","handleMousemove","handleMouseup","handleTouchStart","preventDefault","touches","handleTouchMove","stopPropagation","nativeEvent","stopImmediatePropagation","handleTouchEnd","t0","performance","now","_this$props","width","height","data","refs","canvas","getContext","sq3D","project","bAniMode","count","lastCnt","mode","objList","fTxy","msg","fillText","font","textBaseline","demoText","t1","pfMsg","concat","round","interval","forceUpdate","_this$props2","react_default","createElement","onMouseMove","onMouseUp","ref","onMouseDown","style","className","React","Component","App","_this2","handleClick","setState","viewMode","state","toggleHeatmap","bHeatmap","toggleStarmap","bStarmap","bind","assertThisInitialized","data_cst","data_lns","isLoading","_this3","dataCst","dataLns","cTokyo2018","tokyo2018","Avg","map","t","p","op","heatMapColor","_this$state","error","message","WrappedCom","init","change","AniGraphic3D","_React$Component","_class","lastTS","tick","inherits","createClass","value","_frameId","requestAnimationFrame","window","cancelAnimationFrame","timestamp","assign","cw","Tau","obliquity","pos_Sun","pos_Moon","ol_stars","DemoGraphic3D","_ref","react","background","onTouchStart","onClick","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.135bb7e9.chunk.js","sourcesContent":["// sqUtil - SpacetimeQ, Soomin K.\n\nexport const deg2rad = (deg) => Math.PI*deg/180;\nexport const rad2deg = (rad) => rad*180/Math.PI;\n\nexport const fetchJSON = (url, cbSetData, cbError) => {\n  // ~/D/nodejs/fileserver$ node server.js\n  fetch(url)\n    .then(response => {\n       const contentType = response.headers.get(\"content-type\");\n       console.log('contentType:', contentType);\n       if (contentType && contentType.includes(\"application/json\"))\n         return response.json();\n       throw new TypeError(\"Oops, no JSON file!\");\n    })  // parses response to JSON\n    .then(cbSetData)\n    .catch(cbError);\n}\n","// Soomin K., SpacetimeQ 3D Library\n// https://www.sitepoint.com/building-3d-engine-javascript/\n\n// Arrow functions are designed to be \"throwaway\" functions,\n// and so cannot be used to define new types.\n\n// rotation matrix\nexport class sq3DContext {\n  constructor(ctx, center, scrSize, projMode=0, dZoom=100) {\n    this.ctx      = ctx;       // canvas context\n    this.ctr      = center;    // {x, y, z} and ceter.y should not be zero!\n    this.scr      = scrSize;   // {x: width, y: height} of the screen\n    this.projMode = projMode;  // projection mode, 0: Orthographic, 1: Perspective\n    this.dZoom    = dZoom;     // camera distance form the projection plane\n    this.scrCtr   = {          // {x, y} center in screen coord.\n      x: scrSize.x/2,\n      y: scrSize.y/2\n    };\n  }\n\n  getCenter   = () => this.ctr;\n  getProjMode = () => this.projMode;\n  setZoom     = (zoom) => { this.dZoom = zoom; };\n  clearScreen = () => this.ctx.clearRect(0, 0, this.scr.x, this.scr.y);\n\n  vtxRemoveCtr = (v) => {\n    return {\n      x: v.x - this.ctr.x,\n      y: v.y - this.ctr.y,\n      z: v.z - this.ctr.z\n    };\n  }\n\n  // If the vertex is in spherical coord. (r, th, ph), then rotate 3D(th, ph) will be very easy. (Jan.8,2019)\n\n  // precalculate rotation matrix for Cartesian coord.\n  rotate3D = (theta, phi) => {\n    const cosTh = Math.cos(theta);\n    const sinTh = Math.sin(theta);\n    const cosPh = Math.cos(phi);\n    const sinPh = Math.sin(phi);\n    // [ cos(th), -sin(th)cos(ph),  sin(th)sin(ph) ]\n    // [ sin(th),  cos(th)cos(ph), -cos(th)sin(ph) ]\n    // [       0,         sin(ph),         cos(ph) ]\n    this.rotM = [\n      cosTh, -sinTh*cosPh,  sinTh*sinPh,\n      sinTh,  cosTh*cosPh, -cosTh*sinPh,\n      0,            sinPh,        cosPh\n    ];\n  }\n\n  // using precalculated rotation matrix\n  rotateVertex = (vertex) => {\n    const v = this.vtxRemoveCtr(vertex);\n    return {\n      x: this.ctr.x + this.rotM[0]*v.x + this.rotM[1]*v.y + this.rotM[2]*v.z,\n      y: this.ctr.y + this.rotM[3]*v.x + this.rotM[4]*v.y + this.rotM[5]*v.z,\n      z: this.ctr.z +                    this.rotM[7]*v.y + this.rotM[8]*v.z\n    };\n  }\n\n  // 3D rotation and then 2D projection with the prjection mode\n  // returns rendered screen coord.\n  rot3Dproj2D = (vertex) => {\n    const v = this.vtxRemoveCtr(vertex);\n    const x2 = this.ctr.x + this.rotM[0]*v.x + this.rotM[1]*v.y + this.rotM[2]*v.z;\n    const z2 = this.ctr.z +                    this.rotM[7]*v.y + this.rotM[8]*v.z;\n    const scrXY = (x, y) => {  // to screen coord.\n      return {\n        x: this.scrCtr.x + x,\n        y: this.scrCtr.y - y\n      };\n    }\n\n    let r;\n    if (this.projMode === 0) {   // Orthographic projection\n      if (this.dZoom === 100)    // d is a zoom factor, if d = 200, zoom in 200%\n        return scrXY(x2, z2);\n      r = this.dZoom/100;\n    } else {                      // Perspective view\n      // d: projection plane's distance from the camera\n      // As d becomes larger, the object view becomes also larger.\n      r = this.dZoom/(this.ctr.y + this.rotM[3]*v.x + this.rotM[4]*v.y + this.rotM[5]*v.z); // y2\n    }\n    return scrXY(r*x2, r*z2);   // use z-coord since y-axis is defined as the opposite direction of the view\n  }\n\n  // render by drawing functions, not by 3D objects\n  // graph: 3D graph function\n  // R: radius\n  // dth: increment of theta\n  // dph: increment of phi\n  // th2: to theta\n  // ph2: to phi\n  // palette: colors list\n  render3DG = (graph, gS, stroke, palette=null) => {\n    //this.clearScreen();\n    const { ctr, R, dth, dph, th2, ph2 } = gS;\n    let nVtcs=0;  // for profiling\n    for (let ph=0; ph <= ph2; ph+=dph) {\n      let P;\n      for (let th=0; th <= th2; th+=dth) {  // angle to iterate\n        // rotate 3D and render to 2D\n        this.ctx.strokeStyle = stroke;\n        this.ctx.beginPath();\n        P = this.rot3Dproj2D(graph(ctr, R, th,     ph));     this.ctx.moveTo(P.x, P.y);\n        P = this.rot3Dproj2D(graph(ctr, R, th+dth, ph));     this.ctx.lineTo(P.x, P.y);\n        P = this.rot3Dproj2D(graph(ctr, R, th+dth, ph+dph)); this.ctx.lineTo(P.x, P.y);\n        P = this.rot3Dproj2D(graph(ctr, R, th,     ph+dph)); this.ctx.lineTo(P.x, P.y);\n        this.ctx.closePath();\n        if (palette) {\n          this.ctx.fillStyle = palette[nVtcs % palette.length];\n          this.ctx.fill();\n        }\n        this.ctx.stroke();\n        nVtcs++;\n      }\n    }\n    return nVtcs;  // for profiling\n  }\n\n  // Vertex based rendering\n  // objects: a list of 3D objects\n  //   3D object: has {vtcs, faces, colors}\n  //     vtcs:  a list of vertices; vertice: a tuple (x, y, z)\n  //     faces: a list of faces;    face: an array vertices that form a face\n  render3D = (objects) => {\n    this.clearScreen();  // Clear the previous frame\n    //this.ctx.drawImage(bkg_image, 0, 0);\n    let nVtcs=0;  // for profiling\n    objects.forEach(object => {  // check if the performance is ok compared to the for loop\n      if (object.graph) {\n        nVtcs += this.render3DG(object.graph, object.gS, object.stroke, object.colors);\n      } else {\n        if (object.bDrawVertices) {  // if the object has no faces just draw vertices\n          for (let i=0; i < object.vtcs.length; i++) {  //object.vtcs.forEach(v => {\n            const P = this.rot3Dproj2D(object.vtcs[i]);\n            this.ctx.fillStyle = object.colors[i % object.colors.length];\n            this.ctx.beginPath();\n            const r = (object.vtcs[i].w != null) ? object.vtcs[i].w : .2;\n            this.ctx.arc(P.x, P.y, r, 0, 2*Math.PI);\n            //this.ctx.stroke();\n            this.ctx.fill();\n            nVtcs++;\n          }\n        }\n        object.faces.forEach((face, k) => {  // for each faces in the object, that is a array of face\n          for (let i=0; i < face.length; i++) {  // loop through the array of vertices\n            const P = this.rot3Dproj2D(face[i]);\n            if (i === 0) {\n              this.ctx.strokeStyle = object.stroke;\n              this.ctx.beginPath();\n              this.ctx.moveTo(P.x, P.y);\n            } else {\n              this.ctx.lineTo(P.x, P.y);\n              //if (nVtcs % 10 === 0)\n               // this.ctx.fillText(nVtcs, P.x, P.y);\n            }\n          }\n          if (!object.bDrawLinesOnly) {\n            this.ctx.closePath();\n            const color = object.colors[k % object.colors.length];\n            if (color) {\n              this.ctx.fillStyle = color;\n              this.ctx.fill();\n            }\n          } else {\n            this.ctx.lineWidth = .5;\n          }\n          this.ctx.stroke();\n          nVtcs += face.length;  // for profiling\n        })\n      }\n    })\n    return nVtcs;  // for profiling\n  }\n}\n\nexport const rotate3DVertex = (vertex, ctr, theta, phi) => {\n  const cosTh = Math.cos(theta);\n  const sinTh = Math.sin(theta);\n  const cosPh = Math.cos(phi);\n  const sinPh = Math.sin(phi);\n  const v = {\n    x: vertex.x - ctr.x,\n    y: vertex.y - ctr.y,\n    z: vertex.z - ctr.z\n  };\n  // [ cos(th), -sin(th)cos(ph),  sin(th)sin(ph) ]\n  // [ sin(th),  cos(th)cos(ph), -cos(th)sin(ph) ]\n  // [       0,         sin(ph),         cos(ph) ]\n  return {\n    x: ctr.x + cosTh*v.x - sinTh*cosPh*v.y + sinTh*sinPh*v.z,\n    y: ctr.y + sinTh*v.x + cosTh*cosPh*v.y - cosTh*sinPh*v.z,\n    z: ctr.z +                   sinPh*v.y +       cosPh*v.z\n  };\n}\n","// Soomin K., SpacetimeQ\n// sq3D objects, graphs\n\nimport {\n  deg2rad\n} from './sqUtil';\nimport {\n  rotate3DVertex\n} from './sq3D';\n\n/*\nexport const Circle3D1 = function(c, r, colors=null, N=72/4) {  // N slices per quarter\n  this.bDrawLinesOnly = true;\n  this.vtcs  = [];\n  this.faces = [];\n  const addVertex = (x, y, z) => {\n    this.vtcs.push({x: c.x + x, y: c.y + y, z: c.z + z});\n  }\n  addVertex(0, 0, 0);\n  let faces = [];\n  for (let f=0; f < 4; f++) {\n    faces.push([this.vtcs[0]]);\n  }\n  let v=1;\n  for (let th=0, th2=Math.PI/2, dth=th2/N; th < th2; th += dth) {\n    const r_cosTh = r*Math.cos(th);\n    const r_sinTh = r*Math.sin(th);\n    addVertex( r_cosTh,  r_sinTh, 0);\n    addVertex(-r_cosTh,  r_sinTh, 0);\n    addVertex(-r_cosTh, -r_sinTh, 0);\n    addVertex( r_cosTh, -r_sinTh, 0);\n    for (let j=0; j < 4; j++)\n      faces[j].push(this.vtcs[v++]);\n  }\n  addVertex(0,  r, 0);  // add closing vertex for the quadrant I, II\n  addVertex(0, -r, 0);  // for the quadrant III, IV\n  for (let q=0; q < 4; q++) {\n    const id = (q < 2) ? this.vtcs.length-2 : this.vtcs.length-1;\n    faces[q].push(this.vtcs[id]);\n    this.faces.push(faces[q]);\n  }\n  this.colors = colors;\n  console.log(\"Circle3D\", r, N);\n}\n\nconst Cylinder1 = function(c, r, colors=null, N=72/4, hr=.1) {  // N slices per quarter\n  this.vtcs  = [];\n  this.faces = [];\n  const addVertices = (x, y, z) => {\n    this.vtcs.push({x: c.x + x, y: c.y + y, z: c.z + z + r*hr});\n    this.vtcs.push({x: c.x + x, y: c.y + y, z: c.z + z - r*hr});\n  }\n  const addFaces = (i) => {\n    for (let q=0; q < 4; q++) {\n      this.faces.push([\n        this.vtcs[2*q+8*(i-1)],\n        this.vtcs[2*q+8*(i-1)+1],\n        this.vtcs[2*q+8*i+1],\n        this.vtcs[2*q+8*i]\n      ]);\n    }\n  }\n  for (let i=0, th=0, dth=Math.PI/N; i <= N; i++, th += dth) {\n    const r_cosTh = r*Math.cos(th);\n    const r_sinTh = r*Math.sin(th);\n    addVertices( r_cosTh,  r_sinTh, 0); // 0,1   8,9   16,17\n    addVertices(-r_cosTh,  r_sinTh, 0); // 2,3  10,11  18,19\n    addVertices(-r_cosTh, -r_sinTh, 0); // 4,5  12,13  20,21\n    addVertices( r_cosTh, -r_sinTh, 0); // 6,7  14,15  22,23\n    if (i > 0) {  // skip the first\n      addFaces(i);\n    }\n  }\n  this.colors = colors;\n  console.log(\"Cylinder1\", r, N);\n}\n*/\nexport const cWhite50 = \"rgba(255,255,255,.5)\";\n\nexport const Disk = function(c, r, ph, stroke=cWhite50, colors=null, N=72) {  // N slices\n  this.bDrawLinesOnly = (colors === null);\n  this.vtcs  = [];\n  this.faces = [];\n  this.vtcs.push({ x: c.x, y: c.y, z: c.z });\n  const dth = 2*Math.PI/N;\n  for (let i=0, th=0; i <= N; i++, th+=dth) {\n    const r_sinTh = r*Math.sin(th);  // y before phi rotation\n    // 3D rotation of (x, y, z=0) with theta=0, phi=ph\n    this.vtcs.push({\n      x: c.x + r*Math.cos(th),\n      y: c.y + r_sinTh*Math.cos(ph),\n      z: c.z + r_sinTh*Math.sin(ph)\n    });\n    if (i === 0)\n      continue;  // skip the first one\n    this.faces.push([\n      this.vtcs[i],\n      this.vtcs[i+1], // since we added one vertex before the loop\n      this.vtcs[0]\n    ]);\n  }\n  this.stroke = stroke;\n  this.colors = colors;\n  console.log(\"Disk\", r, N);\n}\n\nexport const Cylinder = function(c, r, ph, stroke=cWhite50, colors=null, N=72, dh=.05) {  // N slices\n  this.vtcs  = [];\n  this.faces = [];\n  const dth = 2*Math.PI/N;\n  for (let i=0, th=0; i <= N; i++, th+=dth) {\n    const r_sinTh = r*Math.sin(th);  // y before phi rotation\n    // 3D rotation of (x, y, z) with theta=0, phi=ph\n    const x = c.x + r*Math.cos(th);\n    const dz = r*dh;\n    this.vtcs.push(rotate3DVertex({x: x, y: c.y + r_sinTh, z: c.z + dz}, c, 0, ph));\n    this.vtcs.push(rotate3DVertex({x: x, y: c.y + r_sinTh, z: c.z - dz}, c, 0, ph));\n    if (i === 0)\n      continue;  // skip the first one\n    this.faces.push([\n      this.vtcs[2*(i-1)],\n      this.vtcs[2*(i-1)+1],\n      this.vtcs[2*i+1],\n      this.vtcs[2*i]\n    ]);\n  }\n  this.stroke = stroke;\n  this.colors = colors;\n  console.log(\"Cylinder\", r, N);\n}\n\nexport const Stars = function(c, r, d_cst, d_lns, stroke=\"White\", colors=null) {\n  this.bDrawVertices  = true;\n  this.bDrawLinesOnly = true;  // no fill\n  this.vtcs  = [];\n  this.faces = [];\n\n  const findVtcs = (id) => {  // implement in python JSON converter\n    for (let i=0; i < this.vtcs.length; i++) {\n      if (this.vtcs[i].id === id)\n        return i;\n    }\n    return -1;\n  }\n\n  for (let key in d_cst) {\n    if (d_cst.hasOwnProperty(key)) {\n      // console.log(key, ':');\n      for (let v in d_cst[key]) {\n        const s = d_cst[key][v];    // star array: [HD_hex, ra, dec, mag]\n        if (s[3] <= 6) {\n          const mAdj = (s[3]+5);  // there's no start brighter than magnitude -5 (venus -4.92)\n          const w = 600/Math.pow(mAdj, 3);  // apparent magnitude to the radius\n          //const vS = graphSphere(c, r, deg2rad(s[1]), deg2rad(s[2]));\n          //this.vtcs.push({ x: vS.x, y: vS.y, z: vS.z, w: s[3] });\n          //this.vtcs.push({r: r, th: deg2rad(s[1]), ph: deg2rad(s[2])});\n          this.vtcs.push(graphSphere(c, r, deg2rad(s[1]), deg2rad(s[2])));  // spherical -> Catesian\n          const iLast = this.vtcs.length-1;\n          this.vtcs[iLast].w  = w;\n          this.vtcs[iLast].id = parseInt(s[0]);\n        }\n      }\n    }\n  }\n  for (let key in d_lns) {\n    if (d_lns.hasOwnProperty(key)) {\n      // console.log(key, ':');\n      for (let l in d_lns[key]) {\n        //console.log('l=', l, d_lns[key][l]);\n        let a = [];\n        for (let id in d_lns[key][l]) {  // constellation line, [w, hd_hex, ...]\n          if (id === 0) {  // line width\n            // add later\n            continue;\n          }\n          const idx = findVtcs(d_lns[key][l][id]);\n          //console.log(idx, d_lns[key][l][id]);\n          if (idx >= 0)\n            a.push(this.vtcs[idx]);\n        }\n        this.faces.push(a);\n        //console.log(a);\n      }\n    }\n  }\n  this.stroke = stroke;\n  this.colors = colors;\n  console.log(\"Stars\", r, this.vtcs.length);\n}\n\nexport const Graph = function(graph, ctr, R, dth, dph, th2, ph2, stroke=cWhite50, colors=null) {\n  this.graph = graph;\n  this.gS = { // graph Spec.\n    ctr: ctr,\n    R:   R,\n    dth: dth,\n    dph: dph,\n    th2: th2,\n    ph2: ph2\n  };\n  this.stroke = stroke;\n  this.colors = colors;\n  console.log(\"Graph\", R);\n}\n\nexport const graphTorus = (ctr, R, th, ph) => {\n  const r = R/10;\n  const R_r_cosPh = R + r*Math.cos(ph);\n  return {\n    x: ctr.x + R_r_cosPh*Math.cos(th),\n    y: ctr.y + R_r_cosPh*Math.sin(th),\n    z: ctr.z + r*Math.sin(ph)\n  };\n}\n\n// Sphere coord. to Cartesian coord.\nexport const graphSphere = (ctr, R, th, ph) => {\n  const R_cosPh = R*Math.cos(ph);\n  return {\n    x: ctr.x + R_cosPh*Math.cos(th),\n    y: ctr.y + R_cosPh*Math.sin(th),\n    z: ctr.z + R*Math.sin(ph)\n  };\n}\n","// WeatherUtil.js\nconst scaleRange = {\n  temp : {\n    min : 0,\n    max : 30,\n    w   : 30-0\n  },\n  humidity : {\n    min : 10,\n    max : 90,\n    w   : 90-10\n  }\n};\n\n// CCS hsl color code from [0,1] val; based on the 5 color heatmap\nconst itemPercent = (v, item) => {\n  //if (v < item.min) return 0;\n  //if (v > item.max) return 1;\n  return Number(((v-item.min)/item.w).toFixed(2));\n}\n\nexport const tempPercent     = (temp) => itemPercent(temp, scaleRange.temp);\nexport const humidityPercent = (hum)  => itemPercent(hum,  scaleRange.humidity);\n\nexport const perc2Temp = (perc) => Number(((scaleRange.temp.w)*perc).toFixed(1));\n\n// 5 color heatmap\n//0    : blue   (hsl(240, 100%, 50%))\n//0.25 : cyan   (hsl(180, 100%, 50%))\n//0.5  : green  (hsl(120, 100%, 50%))\n//0.75 : yellow (hsl( 60, 100%, 50%))\n//1    : red    (hsl(  0, 100%, 50%))\n// https://stackoverflow.com/questions/12875486/what-is-the-algorithm-to-create-colors-for-a-heatmap\n// hue: red primary at 0°, green at 120°, blue at 240°\nexport const heatMapColor = (p, op=.7) => {\n  const lfactor = 200;\n  let l=50;\n  if      (p > 1) l -= (p-1)*lfactor;\n  else if (p < 0) l -= -p*lfactor;\n  //  if      (p < 0) p = 0;\n  // else if (p > 1) p = 1;\n  return `hsla(${Number(((1.0 - p)*240).toFixed(2))},100%,${l}%,${op})`;\n}\n","// palette\nconst cT        = \"rgba(0,0,0,0)\";\nconst cRainbow  = [\n  \"rgba(255,  0,  0,.5)\",\n  \"rgba(255,165,  0,.5)\",\n  \"rgba(255,255,  0,.5)\",\n  \"rgba(  0,255,  0,.5)\",\n  \"rgba(  0,  0,255,.5)\",\n  \"rgba( 75,  0,130,.5)\",\n  \"rgba(238,130,238,.5)\",\n  \"rgba(176,196,222,.5)\",\n  \"rgba(176,224,230,.5)\",\n  \"rgba(135,206,235,.5)\",\n  \"rgba(  0,191,255,.5)\",\n  \"rgba( 30,144,255,.5)\",\n  \"rgba(100,144,237,.5)\",\n  \"rgba( 70,130,180,.5)\",\n  \"rgba( 65,105,225,.5)\",\n  \"rgba(  0,  0,255,.5)\",\n  \"rgba(  0,  0,205,.5)\",\n  \"rgba(  0,  0,139,.5)\",\n  \"rgba(  0,  0,128,.5)\",\n  \"rgba( 25, 25,112,.5)\",\n  \"rgba(230,230,250,.5)\",\n  \"rgba(216,191,216,.5)\",\n  \"rgba(221,160,221,.5)\",\n  \"rgba(238,130,238,.5)\",\n  \"rgba(218,112,214,.5)\",\n  \"rgba(255,  0,255,.5)\",\n  \"rgba(186, 85,211,.5)\",\n  \"rgba(147,112,219,.5)\",\n  \"rgba(138, 43,226,.5)\",\n  \"rgba(148,  0,211,.5)\",\n  \"rgba(153, 50,204,.5)\",\n  \"rgba(139,  0,139,.5)\",\n  \"rgba(128,  0,128,.5)\",\n  \"rgba( 75,  0,130,.5)\",\n  \"rgba( 72, 61,139,.5)\",\n  \"rgba(106, 90,205,.5)\",\n  \"rgba(123,104,238,.5)\",\n];\nconst cPurples  = [\n  \"rgba(216,191,216,.5)\",\n  \"rgba(218,112,214,.5)\",\n  \"rgba(255,  0,255,.5)\",\n  \"rgba(128,  0,128,.5)\",\n  \"rgba( 72, 61,139,.5)\",\n  \"rgba(123,104,238,.5)\"\n];\n//const cGreens   = [\"Olive\", \"LimeGreen\", \"SpringGreen\", \"DarkSeaGreen\", \"ForestGreen\", \"DarkGreen\"];\n//const cRGBs     = [\"Red\", \"Green\", \"Blue\", \"Cyan\", \"Yellow\"];\nconst cGray     = [\n  \"rgba(220,220,220,.5)\",\n  \"rgba(211,211,211,.5)\",\n  \"rgba(192,192,192,.5)\",\n  \"rgba(169,169,169,.5)\",\n  \"rgba(128,128,128,.5)\",\n  \"rgba(105,105,105,.5)\",\n  \"rgba(119,136,153,.5)\",\n  \"rgba(112,128,144,.5)\",\n  \"rgba( 47, 79, 79,.5)\",\n  \"rgba(  0,  0,  0,.5)\"\n];\nconst cSeasons  = [\n  \"rgba(0,0,139,.3)\",\n  \"rgba(0,128,0,.3)\",\n  \"rgba(128,0,0,.3)\",\n  \"rgba(135,206,235,.3)\"\n];\nconst cHeatmap = [\n  \"hsla(  0,100%,50%,.2)\",\n  \"hsla( 10,100%,50%,.2)\",\n  \"hsla( 20,100%,50%,.2)\",\n  \"hsla( 30,100%,50%,.2)\",\n  \"hsla( 40,100%,50%,.2)\",\n  \"hsla( 50,100%,50%,.2)\",\n];\nconst cWeekly   = [\"rgba(255,0,0,.5)\", cT, cT, cT, cT, cT, \"rgba(0,0,255,.5)\"];\nconst cStars    = [\"White\", \"LightYellow\", \"LightPink\", \"LightCyan\", \"Red\", \"LightSkyBlue\"];\nconst cSun      = [\n  \"rgba(255,  0,  0,.5)\",\n  \"rgba(255, 69,  0,.5)\",\n  \"rgba(244,140,  0,.5)\"\n];\n\nexport {\n  cRainbow,\n  cPurples,\n  cGray,\n  cSeasons,\n  cHeatmap,\n  cWeekly,\n  cStars,\n  cSun\n};\n","// Soomin K., SpacetimeQ\n// https://www.sitepoint.com/building-3d-engine-javascript/\n\nimport React, { Fragment } from 'react';\nimport './App.scss';\n\nimport {\n  deg2rad,\n  rad2deg,\n//  fetchJSON\n} from './sqUtil';\nimport {\n  Animate\n} from './sqAni';\nimport {\n  sq3DContext\n} from './sq3D';\nimport {\n  cWhite50,\n  Disk,\n  Cylinder,\n  Stars,\n  Graph,\n//  graphTorus,\n  graphSphere\n} from './sq3DObj';\nimport {\n  tempPercent,\n  heatMapColor\n} from './WeatherUtil';\nimport {\n//  cRainbow,\n//  cPurples,\n  cGray,\n  cSeasons,\n//  cHeatmap,\n  cWeekly,\n  cStars,\n  cSun\n} from './palette';\n\n// for Demo, will use fetchJSON in production\nimport dataCst   from './zodiac.json';\nimport dataLns   from './zodiac_lines.json';\nimport tokyo2018 from './tokyo-avg2018.json';\n\n// Code reuse by Render Props (-> objects props)\nclass Graphic3D extends React.Component {\n  constructor(props) {\n    super(props);\n    /* experimental public class fields syntax enabled by default in Create React App.\n    this.paint            = this.paint.bind(this);\n    // Event Handlers\n    this._moveStart       = this._moveStart.bind(this);\n    this._move            = this._move.bind(this);\n    this._moveEnd         = this._moveEnd.bind(this);\n    this.handleMousedown  = this.handleMousedown.bind(this);\n    this.handleMousemove  = this.handleMousemove.bind(this);\n    this.handleMouseup    = this.handleMouseup.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove  = this.handleTouchMove.bind(this);\n    this.handleTouchEnd   = this.handleTouchEnd.bind(this);\n*/\n    this.mousedown = false;\n    this.mouse = {x: 0, y: 0};\n    this.count = 0;\n    this.lastCnt = 0;\n    this.pfMsg  = '>';\n    this.th = this.props.theta ? this.props.theta : 0;\n    this.ph = this.props.phi   ? this.props.phi   : 0;\n    this.bAniMode = this.props.interval != null;\n    this.mode = 0;\n  }\n\n  componentDidMount() {\n    this.paint();\n    this.forceUpdate();  // to display this.profMsg at DOM\n  }\n\n  componentDidUpdate() {\n    this.paint();\n  }\n\n  _moveStart = (ex, ey) => {  // Initialize move\n    this.mousedown = true;\n    this.mouse = {x: ex, y: ey};\n  }\n\n  _move = (ex, ey) => {  // move\n    if (this.mousedown) {\n      this.th -= (ex - this.mouse.x)*Math.PI / 360;\n      this.ph += (ey - this.mouse.y)*Math.PI / 360;  // sensitivity\n      this.mouse = {x: ex, y: ey};\n      this.paint();\n    }\n  }\n\n  _moveEnd = () => {  // Stop move\n    this.mousedown = false;\n  }\n\n  handleMousedown = (ev) => {  // Initialize move\n    this._moveStart(ev.clientX, ev.clientY);\n  }\n\n  handleMousemove = (ev) => {  // move\n    this._move(ev.clientX, ev.clientY);\n  }\n\n  handleMouseup = () => {  // Stop move\n    this._moveEnd();\n  }\n  handleTouchStart = (ev) => {\n    ev.preventDefault();\n    this._moveStart(ev.touches[0].clientX, ev.touches[0].clientY);\n  }\n\n  handleTouchMove = (ev) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    ev.nativeEvent.stopImmediatePropagation();\n    this._move(ev.touches[0].clientX, ev.touches[0].clientY);\n  }\n\n  handleTouchEnd = () => {\n    this._moveEnd();\n  }\n\n  paint = () => {\n    // ############ Profiling BEGIN\n    const t0 = performance.now();\n    // ############ Profiling END\n    const { width, height, data } = this.props;\n    // Set the alpha option to false if the transparent backdrop is not required to optimize rendering.\n    // But, in Firefox, the background became black when alpha was set false.\n    const ctx = this.refs.canvas.getContext(\"2d\"); //, { alpha: false });\n\n    const demoText = () => {\n      let   y=10;\n      const fTxy = (msg) => { ctx.fillText(msg, 10, y); y+=20; }\n\n      ctx.font = '18px Courier';\n      ctx.textBaseline = 'hanging';\n      ctx.fillStyle = 'White';\n      fTxy(\"SpacetimeQ Calendar Machine - Wireframes\");\n      ctx.font = '14px Courier';\n      fTxy(\"> Conceptual views integrated into Physical spaces\");\n      ctx.fillStyle = 'Cyan';\n      fTxy(\"> 1007 stars in the zodiac constellations (mag <= 6)\");\n      fTxy(\"> Heatmap of Tokyo, Daily Average 2018\");\n      ctx.fillStyle = 'Orange';\n      fTxy(\"> Ecliptic coordinates with 72 sections (yearly rotation)\");\n      fTxy(\"> Equatorial coordinates with 24 sections (daily rotation)\");\n    };\n\n    //ctx.strokeStyle = 'rgba(0, 0, 0, .9)';\n    ctx.lineWidth   = 1;\n    //ctx.globalAlpha = 0.7;\n\n    const sq3D = new sq3DContext(\n      ctx,\n      {x: 0, y: .6*height, z: 0},\n      {x: width, y: height},\n      this.props.project\n    );   // ctr.y should not be 0\n\n    let dZoom = 80+40*Math.sin(this.ph); // Applying round() will cause an incontinuous, wiggling animation.\n    if (sq3D.getProjMode() > 0) {  // In Perspective Projection, zooming effect is dependent on the object size\n      dZoom *= width/250;\n    }\n    if (this.bAniMode && !this.mousedown) {\n      this.count++;\n      if (this.th < data && (this.count - this.lastCnt > 500)) {\n        this.lastCnt = this.count;\n        this.mode++;\n        if (this.mode >= 3)\n          this.mode = 0;\n      }\n      switch (this.mode) {\n        case 0: this.th += data; break;\n        case 1: this.ph += data; break;\n        case 2: this.th += data;\n                this.ph += data; break;\n        default:\n      }\n      if (this.th > 2*Math.PI) this.th = 0; // set boundary\n      if (this.ph > 2*Math.PI) this.ph = 0;\n    }\n    let nVtcs = 0;\n    //let background = new Image();\n    //background.src = \"./milkyway800x800.jpg\";\n    /*\n    background.onload = function() {\n      ctx.drawImage(background, 0, 0);\n    }\n    */\n    sq3D.rotate3D(-this.th, this.ph);\n    sq3D.setZoom(dZoom);\n    nVtcs = sq3D.render3D(this.props.objList); // , background);  // 3D object list\n    demoText();\n    // ############ Profiling BEGIN\n    if (!this.bAniMode || this.count % 10 === 0) {\n      const t1 = performance.now();\n      this.pfMsg = (sq3D.getProjMode() > 0) ? \">Perspective Pj.\" : \">Orthographic Pj.\";\n      this.pfMsg += this.bAniMode ? `${Math.round(1000/this.props.interval)}fps,` : '';\n      this.pfMsg += `${nVtcs}vtcs,` +\n              `${(t1-t0).toFixed(2)}ms,` +\n              `${Math.round(dZoom)}%,` +\n              `θ:${(rad2deg(this.th)).toFixed(1)}°,` +\n              `φ:${(rad2deg(this.ph)).toFixed(1)}°`;\n    }\n    // ############ Profiling END\n  }\n  // Why the report doesn't appear for a static (called once) mode?\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <div\n        onMouseMove = {this.handleMousemove}\n        onMouseUp   = {this.handleMouseup}\n        //onTouchMove ={this.handleTouchMove}\n        //onTouchEnd  ={this.handleTouchEnd}\n      >\n        <canvas ref=\"canvas\" width={width} height={height}\n          onMouseDown={this.handleMousedown}\n          //onTouchStart={this.handleTouchStart}\n          style={this.props.style}\n        />\n        <div className=\"report\">{this.pfMsg}</div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.state = {\n      viewMode: 0,\n      bHeatmap: false,\n      bStarmap: true,\n      data_cst: null,\n      data_lns: null,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n/*\n    const urlJsonServer = 'http://localhost:9001/data/';\n    fetchJSON(urlJsonServer + 'zodiac.json',\n      data_cst => this.setState({ data_cst, isLoading: false }),\n      error    => this.setState({ error,    isLoading: false })\n    );\n    fetchJSON(urlJsonServer + 'zodiac_lines.json',\n      data_lns => this.setState({ data_lns, isLoading: false }),\n      error    => this.setState({ error,    isLoading: false })\n    );\n*/\n    this.setState({ data_cst: dataCst, isLoading: false })\n    this.setState({ data_lns: dataLns, isLoading: false })\n    this.cTokyo2018 = [];\n    if (tokyo2018 && tokyo2018.Avg)\n      tokyo2018.Avg.map(t => this.cTokyo2018.push(heatMapColor(tempPercent(t), .6)));\n  }\n\n  handleTouchStart = (ev) => {\n    ev.preventDefault();\n    return false;\n  }\n\n  handleClick = () => {\n    this.setState({ viewMode: (this.state.viewMode + 1) % 2 });\n  }\n  toggleHeatmap = () => {\n    this.setState({ bHeatmap: !this.state.bHeatmap });\n  }\n  toggleStarmap = () => {\n    this.setState({ bStarmap: !this.state.bStarmap });\n  }\n\n  render() {\n    const { data_cst, data_lns, isLoading, error } = this.state;\n    if (!data_cst || !data_lns) {\n      return <p>Please wait ...</p>;\n    }\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n\n    const AniGraphic3D = Animate(Graphic3D, 0.0, data => deg2rad(.5));  // change in angle\n    const cw=800; //900;\n    const ch=cw;\n    const fps=10;\n    const Tau=2*Math.PI;  // Tau manifesto\n\n    // 3D Object List Definitions\n    const center={x: 0,  y: 1.2*cw/2, z: 0};\n    const obliquity = deg2rad(23.439281);\n    // Jan.12, Sun's  position RA: 293.5375 DEC: -21.6733\n    //         Moon's position RA:   4.9875 DEC:  -4.0158\n    const pos_Sun  = graphSphere(center, cw*.4, deg2rad(293.5375), deg2rad(-21.6733));\n    const pos_Moon = graphSphere(center, cw*.2, deg2rad(4.9875),   deg2rad(-4.0158));\n/*\n    const ol_cyl = [\n      new Disk    (center, (cw/2)/12, 0, \"Black\", cSeasons, 24),\n      new Cylinder(center, (cw/2)*.6, 0, \"Black\", cSeasons,  4, .4),\n      new Cylinder(center, (cw/2)*.7, 0, \"Black\", cPurples, 12, .25),\n      new Cylinder(center, (cw/2)*.8, 0, \"Black\", cRainbow, 24, .12),\n      new Cylinder(center, (cw/2)*.9, 0, \"Black\", cGray,    72, .04),\n      new Cylinder(center, (cw/2),    0, \"Black\", this.cTokyo2018, 365, .015)\n    ];\n    const ol_cyl72 = [\n      new Disk    (center,  (cw/2)/12,    0, cWhite50, cSeasons, 24),\n      new Cylinder(center,  (cw/2)*14/15, 0, \"Black\", cRainbow)\n    ];\n    const ol_torus_sphere = [\n      new Graph(graphSphere, center, cw*.1, Tau/24, Tau/24, Math.PI, Tau, cPurples),\n      new Graph(graphTorus,  center, cw*.4, Tau/24, Tau/24, Tau, Tau, cRainbow),\n    ];\n*/\n    const ol_stars = [\n      new Disk (center, cw*.46, 0,         \"rgba(135,206,235,.7)\", null,   24),    // Equatorial coord.\n      this.state.bHeatmap ?\n        new Disk (center, cw*.46, obliquity, null, this.cTokyo2018, 365) :  // Ecliptic coord.\n        new Disk (center, cw*.46, obliquity, \"rgba(255,255,0,.5)\", null, 72),\n      new Graph(graphSphere, center,   cw*.05, Tau/24, Tau/24, Math.PI, Tau, cWhite50, cGray),\n      new Graph(graphSphere, pos_Moon, cw*.02, Tau/12, Tau/12, Math.PI, Tau, \"rgba(255,215,0,.5)\", cGray),\n      new Graph(graphSphere, pos_Sun,  cw*.02, Tau/12, Tau/12, Math.PI, Tau, \"rgba(0,0,0,0)\", cSun),\n      new Cylinder(center, cw*.1,  0,         cWhite50, cSeasons,   24,  .2),\n      new Cylinder(center, cw*.3,  obliquity, cWhite50, cGray,   24,  .05),\n      new Cylinder(center, cw*.43, obliquity, cWhite50, cWeekly, 365, .01),\n      this.state.bStarmap ?\n        new Stars(center, cw*.46, data_cst, data_lns, \"White\", cStars) :\n        new Cylinder(center, cw*.46, obliquity, null, this.cTokyo2018, 365, .05)\n    ];\n/*\n        <AniGraphic3D\n          project={project}\n          objList={ol_cyl}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n        <AniGraphic3D\n          project={project}\n          objList={ol_torus_sphere}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n        />\n */\n\n    const DemoGraphic3D = ({project}) =>\n      <Fragment>\n        <AniGraphic3D\n          project={project}\n          objList={ol_stars}\n          width={cw}\n          height={ch}\n          interval={1000/fps}\n          style={{background: \"rgb(0,0,50)\"}}\n        />\n      </Fragment>;\n\n/*\n    const StaticGraphic3D = ({style}) =>\n      <Fragment>\n        <Graphic3D\n          project={1}\n          objList={ol_cyl}\n          width={cw}\n          height={ch}\n          phi={Math.PI/2}\n          style={style}\n        />\n        <Graphic3D\n          project={1}\n          objList={ol_cyl72}\n          width={cw}\n          height={ch}\n          phi={deg2rad(10)}\n          style={style}\n        />\n        <Graphic3D\n          project={0}\n          objList={ol_cyl72}\n          width={cw}\n          height={ch}\n          phi={deg2rad(10)}\n          style={style}\n        />\n      </Fragment>;\n*/\n    return (\n      <div\n        className=\"App\"\n        onTouchStart={this.handleTouchStart}\n      >\n        <button className=\"btnDemo\" onClick={this.toggleStarmap}>Toggle Starmap</button>\n        <button className=\"btnDemo\" onClick={this.toggleHeatmap}>Toggle Heatmap Disk</button>\n        <button className=\"btnDemo\" onClick={this.handleClick}>Switch View</button>\n        {(this.state.viewMode === 0) && <DemoGraphic3D project={0} />}\n        {(this.state.viewMode === 1) && <DemoGraphic3D project={1} />}\n      </div>\n    );\n  }\n}\n\n// <StaticGraphic3D style={{background: \"Lavender\"}} />\n\nexport default App;\n","// Soomin K., SpacetimeQ\n// SpacetimeQ Animation Library\n\nimport React from 'react';\n\n// HOC that adds an animation facility to a component.\n// Provide a new prop, data, that the wrapped component uses to render its output.\n// Ex) const AnimateGraphic3D = Animate(Graphic3D, 0, (data => {data += 0.5}));\nexport const Animate = (WrappedCom, init, change) => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.lastTS = 0;\n      this.tick = this.tick.bind(this);\n      this.state = {\n        data: init   // initial value of the data\n      }\n    }\n\n    componentDidMount() {\n      if (!this._frameId)\n        this._frameId = requestAnimationFrame(this.tick);\n    }\n\n    componentWillUnmount() {\n      window.cancelAnimationFrame(this._frameId);\n    }\n\n    tick(timestamp) {\n      let elapsed = timestamp - this.lastTS;\n      if (elapsed < this.props.interval) { // skip the loop for this tick\n        this._frameId = requestAnimationFrame(this.tick);\n        return;\n      }\n      this.lastTS = timestamp;\n      this.setState({ data: change(this.state.data) });  // callback with data\n      this._frameId = requestAnimationFrame(this.tick);\n    }\n\n    render() {\n      // renders the wrapped component with the fresh data!\n      // pass through any additional props\n      return <WrappedCom data={this.state.data} {...this.props} />;\n    }\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}