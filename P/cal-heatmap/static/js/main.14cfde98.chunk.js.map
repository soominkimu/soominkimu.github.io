{"version":3,"sources":["P181031.module.scss","CalUtil.js","WeatherUtil.js","P181031.js","serviceWorker.js","index.js"],"names":["module","exports","P181031","ywFullyear","ywGengo","ywYear","ywYrDiff","yw60","yw60kun","ywEto","ywDate","ywWn","ywThisM","ywJpMo","ywHday","ywFurikae","ywToday","rotate-y-one-turn","ywBot","ywEnd","slide-from-left","hideDrawer","pulsar","pulse-ring","tttext","btn","blink-background","blink-text","blink-border","pulse-dot","IsLeapYear","y","DaysInMonth","m","NthDayInYear","yr","d","days","scaleRange","min","max","w","itemPercent","v","item","Number","toFixed","tempPercent","temp","perc2Temp","perc","heatMapColor","pct","op","arguments","length","undefined","p","concat","Legend","_ref","bCelsius","itemName","sz","margin","lnsStop","lnsText","svgSz","x","i","push","react_default","a","createElement","key","offset","stopColor","Math","floor","width","height","style","border","backgroundColor","fontSize","textAnchor","fill","id","x1","y1","x2","y2","fontFamily","WeekRow","Names","WeekHeader","jp","map","name","data-c","fetchJSON","url","cbSetData","cbError","fetch","then","response","contentType","headers","get","console","log","includes","json","TypeError","catch","YearWeekly","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchJSONfile","fname","data","setState","isLoading","error","state","today","Date","now","getDate","_this2","timerID","setInterval","tick","document","getElementsByTagName","clearInterval","_this3","_this$state","message","getWeatherColorYMD","el","hum","High","Low","Avg","Humidity","i10","i12","yrDiff","getFullYear","firstDoW","getDay","lnsRows","Days","bFurikae","bThisYear","IsThisMonth","mo","getMonth","WeekNumOfToday","ceil","lnsWeek","c","NewMonthRow","bThisWeek","bThisMonth","tm","data-r","data-tm","className","STL","cn","bToday","st","weather","bgc","assign","toString","data-m","data-qtr","rowSpan","trunc","Month","jpo","en3","data-year","data-yr-diff","HY12","emoji","Gengo","GengoYear","HY10","kun","P181031_WeekRow","React","Component","ToggleCalendar","_this4","isToggleOn","weatherID","handleClick","bind","assertThisInitialized","handleClickWeather","thisYear","transform","opacity","wth","onClick","cursor","P181031_YearWeekly","P181031_Legend","P181031_ToggleCalendar","Boolean","window","location","hostname","match","ReactDOM","render","src_P181031","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14cfde98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"P181031\":\"P181031_P181031__2CenW\",\"ywFullyear\":\"P181031_ywFullyear__XT9Xl\",\"ywGengo\":\"P181031_ywGengo__VbWos\",\"ywYear\":\"P181031_ywYear__1h2QU\",\"ywYrDiff\":\"P181031_ywYrDiff__271_S\",\"yw60\":\"P181031_yw60__1KxVl\",\"yw60kun\":\"P181031_yw60kun__3RNe8\",\"ywEto\":\"P181031_ywEto__1aOeC\",\"ywDate\":\"P181031_ywDate__32jUm\",\"ywWn\":\"P181031_ywWn__1nqhq\",\"ywThisM\":\"P181031_ywThisM__v-3XE\",\"ywJpMo\":\"P181031_ywJpMo__2TD_e\",\"ywHday\":\"P181031_ywHday__lS_Ny\",\"ywFurikae\":\"P181031_ywFurikae__3B0HP\",\"ywToday\":\"P181031_ywToday__31WbM\",\"rotate-y-one-turn\":\"P181031_rotate-y-one-turn__3za_k\",\"ywBot\":\"P181031_ywBot__26qKE\",\"ywEnd\":\"P181031_ywEnd__2ejOL\",\"slide-from-left\":\"P181031_slide-from-left__3ZI96\",\"hideDrawer\":\"P181031_hideDrawer__29uo2\",\"pulsar\":\"P181031_pulsar__e2K3R\",\"pulse-ring\":\"P181031_pulse-ring__B8pSk\",\"tttext\":\"P181031_tttext__1WbQu\",\"btn\":\"P181031_btn__nsGC-\",\"blink-background\":\"P181031_blink-background__1_VqZ\",\"blink-text\":\"P181031_blink-text__1q3nW\",\"blink-border\":\"P181031_blink-border__2iO4O\",\"pulse-dot\":\"P181031_pulse-dot__2hWC_\"};","// CalUtil\n//\nimport Names from './names.json';\n\n// Check if the given year is a leap year in the Gregorian calendar\nexport const IsLeapYear = (y =>\n  ((y % 4   === 0) &&\n   (y % 100 !== 0)) ||\n   (y % 400 === 0));\n\n// const DaysInMonth = (m, y) => new Date(y, m, 0).getDate();\n// m: 1..12\n// Gregorian Calendar: Sep. 1752 -> 1,2,14,...30 (11 days advanced)\nexport const DaysInMonth = (m, y) => {\n  switch (m) {\n    case 4:\n    case 6:\n    case 9:\n    case 11: return 30;\n    case 2:  return IsLeapYear(y) ? 29 : 28;\n    default: return 31;\n  }\n}\n\n// Count the number of days with the year up to the specified date\n// m starts from 1\nexport const NthDayInYear = (yr, m, d) => {\n/*\n  let mo = 1;\n  let days = 0;\n  while (mo < m) {\n    days += DaysInMonth(mo, yr);  // add up days to the previous month\n    mo++;\n  }\n*/\n  // For the optimized performance, avoid the loop and use the pre-calculated array\n  // accumulated days until the month\n  const accDays = [\n    0,\n    31,\n    31+28,\n    31+28+31,\n    31+28+31+30,\n    31+28+31+30+31,\n    31+28+31+30+31+30,\n    31+28+31+30+31+30+31,\n    31+28+31+30+31+30+31+31,\n    31+28+31+30+31+30+31+31+30,\n    31+28+31+30+31+30+31+31+30+31,\n    31+28+31+30+31+30+31+31+30+31+30\n  // 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11 month\n  ];\n  if (m < 1 || m > 12)\n    return 0;  // valid range check\n  let days = accDays[m-1];\n  if (m > 2 && IsLeapYear(yr))\n    days++;\n  return (days + d);\n}\n\n// 元号 from 西暦\nexport const GengoYear = (yr) => {\n  for (let i = (Names.Gengo.yr.length - 1); i >= 0; i--)\n    if (yr >= Names.Gengo.yr[i])\n      return Names.Gengo.jp[i] + (yr - Names.Gengo.yr[i] + 1);\n  return yr;   // out of range, just return yr\n}\n\nexport const deg2rad = (deg) => deg*Math.PI/180;\n\n// get Julian Day Number\n// Invented in 1583 by Joseph Scaliger\n// The 7980 year cycle (solar, lunar, and a particular Roman tax cycle)\n// Jan.1,4713 B.C. at noon GMT ~ Jan.22,3268 at noon GMT\n// The number of days from Jan. 1, 4713 B.C. at 12:00:00 GMT, until Jan. 1, 1970 at 00:00:00 UTC\n// A day is 86,400 seconds long. UNIX TIM / 86400000 is the number of days since Jan. 1, 1970\n// new Date gives you the number of seconds from epoch until whatever loca ltime your computer has\nexport const getJulianDay = (date) => (date.getTime() / 86400000.0 + 2440587.5);\n\n// SOURCE: https://news.local-group.jp/moonage/moonage.js.txt\nexport const getMoonAge = (date) => {\n  // 新月日計算\n  // 引数  　julian  ユリウス通日\n  // 戻り値  与えられたユリウス通日に対する直前の新月日(ユリウス日)\n  const getNewMoon = (j) => {\n    const n1 = 2451550.09765;\n    const n2 = 29.530589;\n    const n3 = 0.017453292519943;\n    const k  = Math.floor((j - n1) / n2);\n    const t  = k / 1236.85;\n\n    return (\n        n1\n      + n2 * k\n      + 0.0001337 * t * t\n      - 0.40720   * Math.sin((201.5643 + 385.8169 * k) * n3)\n      + 0.17241   * Math.sin((2.5534   +  29.1054 * k) * n3)\n    );\n  }\n  \n  const jd = getJulianDay(date);\n  // console.log('Julian: ', jl);\n  let nm = getNewMoon(jd);\n  // getNewMoonは新月直前の日を与えるとうまく計算できないのでその対処\n  // (一日前の日付で再計算してみる)\n  if (nm > jd) {\n    nm = getNewMoon(jd - 1.0);\n  }\n  // console.log('Moon age:', jd - nm);\n  return (jd - nm);  // moon's age at current time\n}\n\n// 360 degree\nexport const NormalizeDegree = (deg) => {\n  if (deg >= 0 && deg < 360)  // Don't allow 360, it should be rewinded to 0.\n    return deg;\n  let nd = deg % 360;\n  if (nd < 0)\n    nd += 360;\n  return nd;\n}\n\n// Position of the Sun: https://en.wikipedia.org/wiki/Position_of_the_Sun\n// Precision: compared to 国立天文台＞暦計算室＞暦象年表\n// 1.26 ~ 15.41 min (0.0106 degree) for 2019年二十四節気 視黄経 (Tested at Dec.6,2018)\nexport const getPosSun = (date) => {\n  const n = getJulianDay(date) - 2451545.0;\n  // The mean longitude of the Sun, corrected for the aberration of light\n  const L = NormalizeDegree(280.460 + 0.9856474*n);  // in degree\n  // The mean anomaly of the Sun\n  const g = deg2rad(357.528 + 0.9856003*n);  // in radian\n  // The ecliptic longitude of the Sun\n  return {\n    longitude: NormalizeDegree(L + 1.915*Math.sin(g) + 0.020*Math.sin(2*g)),\n    distance: 1.00014 - 0.01671*Math.cos(g) - 0.00014*Math.cos(2*g)\n  };\n}\n","// WeatherUtil.js\nconst scaleRange = {\n  temp : {\n    min : 0,\n    max : 32,\n    w   : 32-0\n  },\n  humidity : {\n    min : 10,\n    max : 90,\n    w   : 90-10\n  }\n};\n\n// CCS hsl color code from [0,1] val; based on the 5 color heatmap\nconst itemPercent = (v, item) => {\n  if (v < item.min) return 0;\n  if (v > item.max) return 1;\n  return Number(((v-item.min)/item.w).toFixed(2));\n}\n\nexport const tempPercent     = (temp) => itemPercent(temp, scaleRange.temp);\nexport const humidityPercent = (hum)  => itemPercent(hum,  scaleRange.humidity);\n\nexport const perc2Temp = (perc) => Number(((scaleRange.temp.w)*perc).toFixed(1));\n\n// 5 color heatmap\n//0    : blue   (hsl(240, 100%, 50%))\n//0.25 : cyan   (hsl(180, 100%, 50%))\n//0.5  : green  (hsl(120, 100%, 50%))\n//0.75 : yellow (hsl( 60, 100%, 50%))\n//1    : red    (hsl(  0, 100%, 50%))\n// https://stackoverflow.com/questions/12875486/what-is-the-algorithm-to-create-colors-for-a-heatmap\n// hue: red primary at 0°, green at 120°, blue at 240°\nexport const heatMapColor = (pct, op=.7) => {\n  let p=pct;\n  if      (p < 0) p = 0;\n  else if (p > 1) p = 1;\n  return `hsla(${Number(((1.0 - p) * 240).toFixed(2))},100%,50%,${op})`;\n}\n","// SQ Calendar Prototype by Soomin K.\n// fullcalendar.io uses <table>\n\n// Check - Reducing CSS bundle size 70% by cutting the class names and using scope isolation{\n/* webpack.config.js\n{\n  test: /\\.css$/,\n  loader: 'style!css-loader?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]' \n}\n*/\n\nimport React from 'react';\nimport STL from './P181031.module.scss';\nimport Names from './names.json';\nimport {\n  DaysInMonth,\n  NthDayInYear,\n  GengoYear\n} from './CalUtil';\n/*\nimport {\n  TestCalUtil\n} from './CalUtil.test'\n*/\nimport {\n  tempPercent,\n  humidityPercent,\n  perc2Temp,\n  heatMapColor\n} from './WeatherUtil';\n\n/*\nconst getRandomColor = () => {\n  let hex = '0123456789abcdef';\n  let color = '#';\n  for (let i=0; i < 6; i++)\n    color += hex[Math.floor(Math.random()*16)];\n  return color;\n}\n\nconst getWeatherYMD = (y, m, d) => {\n  if (y < 2017 || y > 2018 || (y === 2018 && m >= 12 && d > 9))\n    return null;\n  const HData = (yr) => (yr === 2017) ?  HeatData2017 : HeatData2018;\n  const i = NthDayInYear(y, m, d)-1;\n  return {\n    High    : HData(y).High[i],\n    Low     : HData(y).Low[i],\n    Avg     : HData(y).Avg[i],\n    Humidity: HData(y).Humidity[i]\n  }\n}\n\nconst getWeatherColorYMD = (el, y, m, d) => {\n  let wval=null, bgc=null;\n  if (y === 2017 || (y === 2018 && !(m === 12 && d > 9))) {\n    const HData = (yr) => (yr === 2017) ?  HeatData2017 : HeatData2018;\n    const i = NthDayInYear(y, m, d)-1;\n    switch (el) {\n      case 'High'     : wval = HData(y).High[i];     bgc = heatMapColor(tempPercent(wval), .8); break;\n      case 'Low'      : wval = HData(y).Low[i];      bgc = heatMapColor(tempPercent(wval), .8); break;\n      case 'Avg'      : wval = HData(y).Avg[i];      bgc = heatMapColor(tempPercent(wval,0,30), .8); break;\n      case 'Humidity' : wval = HData(y).Humidity[i]; bgc = heatMapColor(wval/100,          .3); break;\n      default         : wval = null;                 bgc = null;\n    }\n  }\n  return {wval, bgc}\n}\n*/\n\nconst Legend = ({bCelsius, itemName}) => {\n  const sz      = {x: 10, y: 10};   // size of the unit rectangle\n  const margin  = {x: 5,  y: 5};\n  const headLen = 26;    // height of the title header space\n  const num     = 16+1;  // number of scales: (max - min) divisors, 2^n+1\n  const divisor = (num-1)/4;\n  let lnsStop   = [];\n  //let lnsRect   = [];\n  let lnsText   = [];\n  const svgSz   = {\n    x: margin.x*2 + sz.x + 20,\n    y: margin.y*2 + headLen + sz.y*num\n  };\n  \n  for (let i=0; i < num; i++) {\n    let perc = 1 - i/(num-1);\n    lnsStop.push(<stop key={i} offset={(1-perc)*100 + '%'} stopColor={heatMapColor(perc)} />);\n/*\n    lnsRect.push(\n      <rect\n        key={i}\n        x={margin.x}\n        y={margin.y + headLen + i*sz.y}\n        width ={sz.x}\n        height={sz.y}\n        fill={heatMapColor(perc)}\n      />\n    );\n*/\n    if (i % divisor === 0) {\n      lnsText.push(\n        <text\n          key={i}\n          x={margin.x + sz.x + 1}\n          y={margin.y + headLen + i*sz.y + Math.floor(sz.y/1.5)}\n        >{bCelsius ? (perc2Temp(perc) + '°C') : (Math.floor(perc*100) + '%')}</text>\n      );\n    }\n  }\n  \n  return (\n    <div>\n      <svg width ={svgSz.x} height={svgSz.y}\n        style ={{border: \"1px solid Beige\", backgroundColor: \"Ivory\"}}\n      >\n        <text x={svgSz.x/2} y={12} fontSize=\".8em\" textAnchor=\"middle\">\n          {itemName[0]}\n          <tspan x={svgSz.x/2} y={10+14} fill=\"DarkRed\">{itemName[1]}</tspan>\n        </text>\n        <defs>\n          <linearGradient id=\"GradLegend01\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            {lnsStop}\n          </linearGradient>\n        </defs>\n        <rect x={margin.x} y={margin.y + headLen} width={sz.x} height={sz.y*num} fill=\"url(#GradLegend01)\" />\n        <g fontFamily=\"Verdana\" fontSize=\".5em\" textAnchor=\"left\">\n          {lnsText}\n        </g>\n      </svg>\n    </div>\n  );\n}\n\n// Week Header\nconst WeekRow = () =>\n  <tr>\n    {\n      Names.WeekHeader.jp.map((name, i) =>\n      <th\n        key={i}\n        data-c={i}\n      >\n        {name}\n      </th>)\n    }\n  </tr>;\n\nconst fetchJSON = (url, cbSetData, cbError) => {\n  // ~/D/nodejs/fileserver$ node server.js\n  fetch(url)\n    .then(response => {\n       const contentType = response.headers.get(\"content-type\");\n       console.log('contentType:', contentType);\n       if (contentType && contentType.includes(\"application/json\"))\n         return response.json();\n       throw new TypeError(\"Oops, no JSON file! \");\n    })  // parses response to JSON\n    .then(cbSetData)\n    .catch(cbError);\n}\n\n// Year in Weekly mode\n// HTML5 Data Attributes\n// data-col: column 0, .., 8 (week number, 7 DoW, Month column)\n// data-m: month 1..12 (0, 13 for the last, next months)\nclass YearWeekly extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: new Date(),\n      isLoading: true,\n      data: null\n    };\n    console.log(`[${this.props.yr}] Today:`, this.state.today);\n  }\n\n  tick() {\n    const now = new Date();\n    if (this.state.today.getDate() !== now.getDate()) {\n      this.setState(state => ({ today: now }))\n      console.log(`[${this.props.yr}] Updated:`, this.state.today);\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    this.fetchJSONfile(`weather-tokyo-${this.props.yr}.json`);\n    this.timerID = setInterval(() => this.tick(), 1000);\n    console.log(\"DOM count:\", document.getElementsByTagName('*').length);\n    //TestCalUtil();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  fetchJSONfile = (fname) => {\n    //const urlJsonServer = 'http://localhost:9001/data/';\n    const urlJsonServer = 'https://soominkimu.github.io/data/';\n    fetchJSON(urlJsonServer + fname,\n      data  => this.setState({ data,  isLoading: false }),\n      error => this.setState({ error, isLoading: false })\n    );\n  }\n\n  render() {\n    const { data, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n\n    const getWeatherColorYMD = (el, y, m, d) => {\n      //if (y < 2017 || (y === 2019 && m >= 4 && d > 1))\n      //  return null;\n      const i = NthDayInYear(y, m, d)-1;\n      switch (el) {\n        case 'High'     : return heatMapColor(tempPercent(data.High[i]));\n        case 'Low'      : return heatMapColor(tempPercent(data.Low[i]));\n        case 'Avg'      : return heatMapColor(tempPercent(data.Avg[i]));\n        case 'Humidity' : return heatMapColor(humidityPercent(data.Humidity[i]));\n        default         : return null;\n      }\n    }\n\n    const i10 = (this.props.yr-4)%10;   // 十干\n    const i12 = (this.props.yr-4)%12;   // 十二支、えと\n    const yrDiff = this.props.yr - this.state.today.getFullYear();\n    const yrDiffStr = () => {\n      if (yrDiff === 0) return \"今年\";\n      if (yrDiff > 0)   return `${yrDiff}年後`;\n      return                   `${-yrDiff}年前`;\n    }\n\n    const firstDay = new Date(this.props.yr, 0, 1);\n    const firstDoW = firstDay.getDay();  // Sun: 0 .. Sat: 6\n\n    let lnsRows = [];\n    let w = 1;                       // week number:  1..53 or 54\n    let d = (31 - firstDoW)%31 + 1;  // starting date of the first week\n    let m = (d === 1) ? 1 : 0;       // 0: last year's Dec, 1: Jan, .. 12: Dec\n    let Days = 31;                   // Days in the current month\n    let bFurikae = false;            // 振替休日\n    const bThisYear = (this.props.yr === this.state.today.getFullYear());\n    const IsThisMonth = (mo) => (bThisYear && (mo === (this.state.today.getMonth()+1)));\n    const WeekNumOfToday = bThisYear ?\n      Math.ceil(\n        (NthDayInYear(this.props.yr,\n                      this.state.today.getMonth()+1,\n                      this.state.today.getDate()) + firstDoW) / 7) :\n      0;\n    /*\n    const GetYMDstr = (y, m, d) =>  // Outputs like 3250101, 20180309\n      y.toString() + ('0' + m).slice(-2) + ('0' + d).slice(-2);\n      */\n\n    while (m <= 12) {\n      let lnsWeek = [];\n      let c = 0;\n      let NewMonthRow;\n      let bThisWeek = (w === WeekNumOfToday);\n      let bThisMonth = IsThisMonth(m);\n      let tm = 2;  // time 0: past, 1: present, 2: future\n      if (bThisYear) {\n        if (w <= WeekNumOfToday)\n          tm = bThisWeek ? 1 : 0;\n      } else if (this.props.yr < this.state.today.getFullYear()) {\n          tm = 0;\n      }\n      // to separate week number with the background attributes, insert a <div>\n      lnsWeek.push(\n        <td key={c} data-c={c} data-r={w} data-tm={tm} className={STL.ywWn}>\n          <div className={STL.ywWn}>{w}</div>\n        </td>\n      );\n      for (c = 1; c <= 7; c++) {  // 1: Sun, .. 7: Sat\n        let cn = bThisMonth ? STL.ywThisM : '';\n        let bToday = false;\n        let tttext = null;\n        if ((m ===  1 && d === 1) ||\n            (m ===  1 && d === 8) ||\n            (m ===  2 && d === 11) ||\n            (m ===  3 && d === 21) ||\n            (m ===  4 && d === 29) ||\n            (m ===  5 && d === 3) ||\n            (m ===  5 && d === 4) ||\n            (m ===  5 && d === 5) ||\n            (m ===  7 && d === 16) ||\n            (m ===  8 && d === 11) ||\n            (m ===  9 && d === 17) ||\n            (m ===  9 && d === 23) ||\n            (m === 10 && d === 8) ||\n            (m === 11 && d === 3) ||\n            (m === 11 && d === 23) ||\n            (m === 12 && d === 23)) {\n          cn += cn ? (' ' + STL.ywHday) : STL.ywHday;\n          tttext = \"㊗️祝日\";\n          if (c === 1)          // If the holiday falls on the Sunday,\n            bFurikae = true;    // 振替休日 is the nearest weekday that is not a holiday.\n        } else if (bFurikae) {\n          cn += cn ? (' ' + STL.ywFurikae) : STL.ywFurikae;\n          tttext = \"振替休日\";\n          bFurikae = false;\n        }\n        if (bThisWeek) {  // This week\n          if (d === this.state.today.getDate()) {  // Today occurs within this week\n            bToday = true;\n            cn += cn ? (' ' + STL.ywToday) : STL.ywToday;\n            console.log(`[${this.props.yr}] hit today at col=${c}:`);\n          }\n        }\n        if (d >= (Days - 6)) {\n          cn += cn ? (' ' + STL.ywBot) : STL.ywBot;    // bottom borderline\n          if (d === Days)\n            cn += cn ? (' ' + STL.ywEnd) : STL.ywEnd;  // right-side borderline\n        }\n        // console.log(cn);\n        // to apply CSS attributes separately to the date itself rather than the whole <td> cell\n        // conditional rendering\n        let st = null;\n        if (this.props.weather) {\n          const bgc = getWeatherColorYMD(this.props.weather, this.props.yr, m, d);\n          if (bgc) {\n            st = {backgroundColor: bgc};\n          }\n        }\n        lnsWeek.push(\n          <td\n            key={c.toString()}\n            data-c={c}\n            data-r={w}\n            data-m={m}\n            {...(cn ? {className: cn} : null)}\n            // style={st ? st : null}\n            {...(st ? {style: st} : null)}\n          >\n            {bToday ? <div id={STL.pulsar}></div> : null}\n            {tttext ? <span id={STL.tttext}>{tttext}</span> : null}\n            <div className={STL.ywDate}>{d}</div>\n          </td>\n        );\n        if (d === 1)\n          NewMonthRow = true;  // first day of the month appeared at this row\n        if (++d > Days) {\n          d = 1;  // reset\n          m++;\n          Days = DaysInMonth(m, this.props.yr);  // update\n          bThisMonth = IsThisMonth(m);\n        }\n      }\n      if (NewMonthRow && m <= 12) {  // Add Month names column\n        lnsWeek.push(\n          <td\n            key={c}\n            data-c={c}\n            data-m={(d === 1) ? (m-1) : m}\n            data-qtr={Math.ceil(m/3)}\n            {...bThisMonth ? {className: STL.ywThisM} : null}\n            rowSpan={Math.trunc((Days - d + 1)/7 + 1)}   // combine rows at the right end of each week\n          >\n            {Names.Month.jp[m-1]}<br/>\n            <span className={STL.ywJpMo}>\n              {Names.Month.jpo[m-1]}\n            </span><br/>\n            {Names.Month.en3[m-1]}\n          </td>\n        );\n        NewMonthRow = false;  // reset\n      }\n      lnsRows.push(<tr key={w.toString()}>{lnsWeek}</tr>);\n      w++;\n    }\n\n    return (\n      <table className={STL.ywFullyear} style={this.props.style}>\n        <caption data-year={this.props.yr} data-yr-diff={(yrDiff > 0) ? '+' + yrDiff : yrDiff}>\n          <span className={STL.ywYear}>{this.props.yr}</span>\n          <span className={STL.ywYrDiff}>{yrDiffStr()}</span>\n          <span className={STL.ywEto}>{Names.HY12.emoji[i12]}</span>\n          <br/>\n          <span className={STL.ywGengo}>{GengoYear(this.props.yr)}</span>\n          <span className={STL.yw60}>\n            {Names.HY10.jp[i10] +\n             Names.HY12.jp[i12]}\n            <span className={STL.yw60kun}>({Names.HY10.kun[i10]})</span>\n          </span>\n        </caption>\n        <thead>\n          <WeekRow />\n        </thead>\n        <tbody>\n          {lnsRows}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n/*\nclass P181031 extends React.Component {\n\n  render() {\n    const today = new Date();\n    const yyyy = today.getFullYear() - 1;\n    let lnsYW = [];\n\n    for (let y=0; y < 3; y++)\n      lnsYW.push(<YearWeekly key={y.toString()} yr={yyyy + y} />);\n\n    return (\n      <div className={STL.P181031}>\n        {lnsYW}\n         <div style={{height: '400px', width: '40px'}}>\n           <YearWeekly\n             yr={2021}\n             style={{transformOrigin: 'center left', transform: 'scale(.2)'}}\n           />\n         </div>\n         <YearWeekly\n           yr={2020}\n           style={{transform: 'translateX(30%) rotate(-20deg)', transition: 'transform 1s'}}\n         />\n      </div>\n    );\n  }\n}\n*/\n\nclass ToggleCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true,\n      weatherID: 0\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick        = this.handleClick.bind(this);\n    this.handleClickWeather = this.handleClickWeather.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  handleClickWeather() {\n    this.setState(state => ({\n      weatherID: (state.weatherID + 1) % 5\n    }));\n  }\n\n  render() {\n    const thisYear = (new Date()).getFullYear();\n    const st = {\n      transform: 'translateX(-205%)',\n      opacity: .2\n    };\n    const weather  = ['Avg', 'High', 'Low', 'Humidity', null];\n    const itemName = [\n      ['平均','気温'],\n      ['最高','気温'],\n      ['最低','気温'],\n      ['平均','湿度']\n    ];\n    const wth = weather[this.state.weatherID];\n\n    return (\n      <div>\n        <button className={STL.btn}\n          onClick={this.handleClick} style={{width: '100px', cursor: 'pointer'}}>\n          {this.state.isToggleOn ? 'Hide' : 'Show'}\n        </button>\n        <button className={STL.btn}\n          onClick={this.handleClickWeather} style={{width: '100px', cursor: 'pointer'}}>\n          {wth ? wth : 'No weather'}\n        </button>\n        <div className={STL.P181031}>\n          <YearWeekly\n            yr={thisYear-1}\n            weather={wth}\n            style={this.state.isToggleOn ? null : st}\n          />\n          <YearWeekly\n            yr={thisYear}\n            weather={wth}\n            style={this.state.isToggleOn ? null : st}\n          />\n          {this.state.isToggleOn && (this.state.weatherID !== 4) &&\n            <Legend bCelsius={this.state.weatherID !== 3} itemName={itemName[this.state.weatherID]} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst P181031 = () => (\n  <ToggleCalendar />\n)\n\nexport default P181031;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport P181031 from './P181031';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<P181031 />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}