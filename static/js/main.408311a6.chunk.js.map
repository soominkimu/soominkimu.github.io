{"version":3,"sources":["app/darkThemeCtx.tsx","utils/util.ts","utils/svg.tsx","ui/ui.tsx","ui/toggleSlider.tsx","ui/toggleDark.tsx","assets/Qlogo.png","ui/layout/Navbar.tsx","app/home/Footer2.tsx","app/home/Features.tsx","assets/cus.png","assets/c1.png","assets/tech/firebase.svg","assets/tech/react.svg","assets/tech/nodejs.svg","assets/tech/redux.svg","assets/tech/webrtc.svg","assets/tech/ts.svg","assets/tech/tailwindcss.svg","assets/tech/sass.svg","app/home/Tech.tsx","app/home/Home.tsx","ui/layout/Routes.tsx","ui/layout/Layout.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["DarkThemeContext","createContext","dark","darkMode","media","night","toggle","matchMediaDark","window","matchMedia","DarkThemeProvider","children","ITEM_THEME","EV_CHANGE","modeName","isDark","useState","setDark","setMedia","setNight","applyDarkMode","useCallback","dk","save","mode","applyTheme","localStorage","setItem","useLayoutEffect","isMediaMode","handleMediaChange","e","matches","mediaNight","getItem","addEventListener","removeEventListener","document","getElementsByTagName","style","cssText","themeCSSVars","join","Provider","value","classMode","removeItem","className","light","cC","c_base","cnd_if","c_then","c_else","c_prefix","cL","clss","reduce","cum","a","undefined","cLo","getPathD","k","PATHD","RULE_EVENODD","fillRule","clipRule","viewBox","vLen","squareView","len","width","height","SvgIcon","classX","d","Path","strokeWidth","stroke","fill","Rotate","props","transform","strokeLinecap","strokeLinejoin","SvgIconFull","twButtonPressed","isPressed","ToggleDot","bgcolors","ref","useRef","state","useToggleState","useToggleButton","buttonProps","role","aria-checked","isSelected","tabIndex","on","off","ToggleSlider","colors","srOnly","size","sz","sm","slide","ball","dx","md","lg","isDisabled","transformOrigin","ToggleDarkButton","cn","useContext","stopCls","onPress","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","Navbar","src","logo2","alt","Footer2","Qlogo","to","Features","fontSize","Tech","reactsvg","redux","firebase","ts","nodejs","webrtc","tailwindcss","sass","Home","cus","main1","ROUTES","RouteCompos","path","Layout","map","rt","i","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.408311a6.chunk.js","sourcesContent":["/*=============================================================================\n themeContext.tsx - theme (darkmode, color palettes, etc...) context\n\n  ⚆ 🌙 ☀️\n  |  |  +- 'light'\n  |  +---- 'dark'\n  +------- mode switch: 'class' or 'media' (as defined in tailwindcss)\n           In 'media' mode, dim and disable the slider control\n\n  For 'media' mode, toggle button is disabled and dark mode is set automatically.\n  Uses localStorage.theme = 'dark' or 'light' in 'class'(manual) mode.\n  If the localStorage.theme item does not exist, 'media' mode is enabled.\n  On media query change event, the dark mode changes accordingly in 'media' mode.\n\n  - toggleDark.tsx provides the UI implementation\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { createContext, useContext, useState, useLayoutEffect, useCallback, } from 'react';\n\ntype TDarkThemeMode = 'dark' | 'light';\ninterface IDarkThemeState {\n  dark:     boolean;        // is 'dark' mode?\n  darkMode: TDarkThemeMode; // current dark mode in literal\n  media:    boolean;        // is media (automatic) mode?\n  night:    boolean;        // media state if it's night, to change the mode swich color\n  toggle:   (classMode?: boolean) => void;  // callback\n};\n\n// Context Provider\nconst DarkThemeContext = createContext<IDarkThemeState>({\n  dark:     false,\n  darkMode: 'light',\n  media:    false,\n  night:    false,\n  toggle:   () => {}\n});\n\n// Context Consumer using Hooks\nexport const useDarkThemeCtx = () => useContext(DarkThemeContext);\n\nconst matchMediaDark: MediaQueryList = window.matchMedia('(prefers-color-scheme: dark)');\n\n// Theme settings priority\n// 1. localStorage.theme = \"dark\"\n// 2. OS setting: (prefers-color-scheme: dark) basically changes according to the local time\n// Current theme state should be saved to the localStorage only when the toggle switch is operated.\nexport const DarkThemeProvider: React.FC = ({ children }) => {\n  const ITEM_THEME = 'theme';\n  const EV_CHANGE  = 'change';\n  const modeName = (isDark: boolean = true): TDarkThemeMode => isDark ? 'dark' : 'light';\n  const [dark,  setDark]  = useState(false);\n  const [media, setMedia] = useState(false);\n  const [night, setNight] = useState(false);\n\n  // set dark mode and save the state to localStorage\n  const applyDarkMode = useCallback((dk: boolean, save: boolean = true) => {\n    setDark(dk);\n    const mode = modeName(dk);\n    applyTheme(mode);\n    if (save)\n      window.localStorage.setItem(ITEM_THEME, mode);\n  }, []);\n\n  // paints the app before it renders elements\n  useLayoutEffect(() => {\n    const isMediaMode = () => !(ITEM_THEME in localStorage);  // called in the event handler\n    const handleMediaChange = (e: MediaQueryListEvent) => {\n      setNight(e.matches);\n      if (isMediaMode())\n        applyDarkMode(e.matches, false);\n    }\n    const mediaNight = matchMediaDark.matches;\n    setNight(mediaNight);\n    if (localStorage.getItem(ITEM_THEME) === modeName()) {  // 'class' mode\n      applyDarkMode(true);\n    } else if (isMediaMode()) {\n      setMedia(true);\n      if (mediaNight)\n        applyDarkMode(true, false);\n    }\n    matchMediaDark.addEventListener(EV_CHANGE, handleMediaChange)\n    return () => {\n      matchMediaDark.removeEventListener(EV_CHANGE, handleMediaChange);\n    }\n  }, [applyDarkMode]);  // no dependency on dark, runs only once on load\n\n  // toggle(media) will toggle between \"media\" and \"class\" mode\n  // toggle()      will toggle between \"dark\" and \"light\" mode\n  function toggle(classMode: boolean = true) {\n    if (classMode) {  // manual toggle mode\n      if (media)\n        setMedia(false);\n      applyDarkMode(media ? dark : !dark);  // when switching from media mode, inherit dark\n    } else {  // read from the media (system) preference\n      if (!media) {\n        setMedia(true);\n        applyDarkMode(matchMediaDark.matches, false);\n        window.localStorage.removeItem(ITEM_THEME);\n      }\n    }\n  }\n\n  const darkMode = modeName(dark);\n\n  const applyTheme = (mode: TDarkThemeMode) => {\n    const root = document.getElementsByTagName('html')[0];\n    root.style.cssText = themeCSSVars[mode].join(';');\n  }\n\n  return (  // For tailwindcss, automatically wraps with the dark class\n    <DarkThemeContext.Provider value={{dark, darkMode, media, night, toggle}}>\n      <div className={darkMode}>\n        {children}\n      </div>\n    </DarkThemeContext.Provider>\n  );\n}\n\n// CSS variables used in sass: index signature\nconst themeCSSVars: { [K in TDarkThemeMode]: string[] } = {\n  dark: [\n    '--stq-color-text: white',\n    '--stq-color-background: #374151',\n    '--stq-color-shadow: 128,128,128',\n  ],\n  light: [\n    '--stq-color-text: black',\n    '--stq-color-background: #f3f4f6',\n    '--stq-color-shadow: 0,0,0',\n  ]\n};\n","/*=============================================================================\n util.ts - general utility functions\n\n - For debugging, attach \"border border-pink-400 \" to the c_base.\n - Regex for the function call and the whole arguments:\n    (c[C|L]0?o?)\\(\\s*([^)]+?)\\s*\\)\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { IError } from 'common';\n\nconst DEVELOPMENT_MODE: boolean =\n  !process.env.NODE_ENV ||\n   process.env.NODE_ENV === 'development';\n\nexport function isDev() {\n  return DEVELOPMENT_MODE;\n}\n\nexport function dbg(text: string) {  // debug text\n  return DEVELOPMENT_MODE ? text : null;\n}\n\nexport function addIf(\n  cnd_if: Maybe<string | boolean>,\n  c_then: string\n) {\n  return cnd_if ? c_then : '';\n}\n\n// ----------------------------------------------------------------------------\n// className Utilities - Purposes (mainly for tailwindcss' long list of classNames)\n// ----------------------------------------------------------------------------\n// 1. Combine list of strings, no need to care for the delimeter ' ' between strings.\n// 2. Conditional expressions such as {mobile && 'ml-4'} can be seamlessly added.\n//    (React className string cannot be concatenated with null or false expressions.)\n// 3. Using the Object { className: ... } and the spread operator (...), \"className=\" can be removed.\ntype TCondClassF<T = TClassName> = (\n  c_base:  TClassName,   // base classname\n  cnd_if:  Maybe<string | boolean>,  // if the condition met\n  c_then:  TClassName,   // concatenate\n  c_else?: TClassName    // (optional) otherwise\n) => T;\n\n// className Conditional\n// Concatenate class names only if the provided condition is met\n// and return the className object so that it can be used with the spread syntax\n// --------------------------------------------------\n//   className={cC()}  --->  {...cCo()}\n// --------------------------------------------------\nexport const cC: TCondClassF = (   // class with options (if-then-else)\n  c_base, cnd_if, c_then, c_else\n) => {\n  const c_prefix = c_base ? c_base + ' ' : '';  // handle c_base Nullish case\n  if (cnd_if) return (c_prefix + c_then);\n  if (c_else) return (c_prefix + c_else);  // if the third option was given\n  return              c_base || '';\n}\n\n// className Conditional object\nexport const cCo: TCondClassF<IClassNameObj> = (   // class with options (if-then-else)\n  c_base, cnd_if, c_then, c_else\n) => ({ className: cC(c_base, cnd_if, c_then, c_else) });\n\n// className Conditional 0(no base) object\nexport const cC0o = (\n  cnd_if:  Maybe<string | boolean>,  // if the condition met\n  c_then:  TClassName,   // concatenate\n  c_else?: TClassName    // (optional) otherwise\n): IClassNameObj => ({ className: cnd_if ? c_then : c_else });\n\n// class List\n// --------------------------------------------------\n//  className={\"m-1 text-gray-400 \" + (cls || \"\")} can be written as:\n//  className={cL('m-1', 'text-gray-400', cls)}\n// --------------------------------------------------\nexport function cL(\n  ...clss: TClassName0[]  // rest parameters, list of classNames allowing null or boolean\n): TClassName {\n  return clss.reduce((cum, a) => a  // check this add\n    ? cum               // if valid previous (cumulative) string\n      ? cum + ' ' + a   //   concatenate with the delimeter ' '\n      : a               // no valid previous string\n    : cum               // no valid a\n  ) || undefined;       // Only undefined is allowed in nullish expressions in React\n}\n\n// class List object: to omit 'className=' using spread attributes\n// --------------------------------------------------\n//   {...cLo('m-1', 'text-gray-400', cls)}\n// --------------------------------------------------\nexport function cLo(\n  ...clss: TClassName0[]\n): IClassNameObj {\n  return { className: cL(...clss) };\n}\n// ----------------------------------------------------------------------------\n// conditional string concatenation (cL's string version, not classNames)\n// --------------------------------------------------\nexport function cS(\n  ...lstr: Maybe<string | false>[]  // rest parameters, list of strings allowing null or boolean\n): Undefinable<string> {\n  return lstr.reduce((cum, a) => a  // check this add\n    ? cum          // if valid previous (cumulative) string\n      ? cum + a    //   concatenate with no delimeter\n      : a          // no valid previous string\n    : cum          // no valid a\n  ) || undefined;  // Only undefined is allowed in nullish expressions in React\n}\n// ----------------------------------------------------------------------------\n\n// number to leadingZero string\n// or use n.toString().padStart(2, \"0\");  // ES6\nexport const lZ = (n: number) =>\n  (n < 10)\n    ? '0' + n\n    : n.toString();  // leading Zero making a two digit number string\n\n// time String\nexport const timeStr = (d: string | number | Date) => {\n  const dt = new Date(d);\n  return lZ(dt.getHours()) + ':' +\n         lZ(dt.getMinutes());  // JST=UTC+9\n}\n\nlet gLastUniqueId = 1000;  // unique within this app's instance'\nexport const genUniqueId = (prefix: string = 'stq') => {\n  gLastUniqueId++;\n  return `${prefix}${gLastUniqueId.toString()}`;\n}\n\n// --------------------------------------------------\n// Regex\n// --------------------------------------------------\nexport const REGEX_Email = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const sec2hms = (sec: number) => {\n  if (sec < 60) {\n    return sec.toFixed(1) + 's';\n  }\n  let hstr: string = '';\n  let s = Math.trunc(sec);\n  const h = Math.trunc(s/3600);\n  if (h > 0) {\n    s -= h*3600;\n    hstr = h + ':';\n  }\n  const m = Math.trunc(s/60);\n  s -= m*60;\n  return hstr + lZ(m) + ':' + lZ(s);\n}\n\n// const callifdef = (f, arg) => if (f && typeof f === \"function\") f(arg);\n\nexport function toggleValue<T = string>(val: T, a: T, b: T): T {\n  return (val === a) ? b : a;\n}\n\n// returns IError defined in 'common.d.ts', errorObject\nexport const errorO = (code: string, message: string): IError => ({ code, message });\n\nexport const hideAttr = (hide: Undefinable<boolean>) => hide ? 'hidden' : 'block';\nexport const showAttr = (show: Undefinable<boolean>) => hideAttr(!show);\n\n// for use as <a {...OPEN_NEW_WINDOW}>\nexport const OPEN_NEW_WINDOW = {\n  target: \"_blank\",\n  rel:    \"noopener noreferrer\"\n};\n","/*=============================================================================\n svg.tsx - svg utilities\n\n - Path Data (paths.json) naming convention: shape_role; group_function\n   Examples: bell_noti, moon_dark; ico_error, ico_warn\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport PATHD from 'styles/paths.json';\nimport { cL, cLo, showAttr, hideAttr } from './util';\n\n// To avoid No Index Signature Error for the bracket (Obj[key])\nexport type TPathDataKey = keyof typeof PATHD;\nexport const getPathD = (k: TPathDataKey) => PATHD[k];\n\n// <path> arguments\nexport const RULE_EVENODD: React.SVGProps<SVGPathElement> = {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\"\n};\n\n// <svg> arguments\nexport const viewBox = (vLen: number) => ({\n  viewBox: `0 0 ${vLen} ${vLen}`\n});\n\n// short-hand for <svg width={len} height={len} viewBox=`0 0 ${vLen} ${vLen}`>\nexport const squareView = (len: number | string, vLen: number = 24) => ({\n  width:  len,\n  height: len,\n  ...viewBox(vLen)\n});\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1349b640d4d07f40aa7c1c6931f18e3fbf667f3a/types/react/index.d.ts#L2341\ninterface ISvgIconProps extends React.SVGAttributes<SVGElement> {\n  classX?: TClassName;    // additional className\n  vLen?:   number;        // viewBox width height\n  Path?:   TPathDataKey;  // path data id (either d or path should be given)\n  Rotate?: number;        // rotate image in degree\n};\nexport const SvgIcon = ({  // defaults for heroicons.dev\n  className   = \"w-6 h-6\",  // to change default size, reset className\n  classX,                   // Xtra classes NOT to overwirte className\n  vLen        = 24,\n  d, Path,\n  strokeWidth = 2,\n  stroke      = strokeWidth ? \"currentColor\" : \"none\",\n  fill        = \"none\",\n  Rotate,\n  ...props   // rest in SVGProps\n}: ISvgIconProps) =>\n  <svg\n    {...cLo(className, classX, !!Rotate && \"transition-transform duration-500\")}\n    {...{stroke, fill, ...viewBox(vLen)}}\n    {...(!!Rotate && {transform: `rotate(${Rotate})`})}\n    {...props}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={strokeWidth}\n      d={d || (Path && getPathD(Path))}\n    />\n  </svg>;\n\nexport const SvgIconFull = ({\n  className   = \"w-full h-full fill-current\",\n  strokeWidth = 0,\n  ...props           // rest\n}: ISvgIconProps) =>\n  <SvgIcon {...{className, strokeWidth}} {...props} />;\n\ninterface ISvgIconToggleProps extends ISvgIconProps {\n  cond:   boolean;       // condition for toggling\n  d2?:    string;        // second data to be switched with d\n  Path2?: TPathDataKey;  // second path to be switched with path\n};\nexport const SvgIconToggle = ({  // defaults for heroicons.dev\n  classX,\n  cond,\n  d, Path,   // d, Path should be extracted NOT to be passed to the second SvgIcon\n  d2, Path2,\n  ...props\n}: ISvgIconToggleProps) => {\n  return (\n    <>\n      <SvgIcon classX={cL(classX, showAttr(cond))} {...{d, Path}}      {...props} />\n      <SvgIcon classX={cL(classX, hideAttr(cond))} d={d2} Path={Path2} {...props} />\n    </>\n  );\n}\n","/*=============================================================================\n common-ui.tsx - Common UIs in React\n\n - [2021-02-26] React Aria, toggleButton isSelected, isPressed\n - ../node_modules/@react-types/button/src/index.d.ts\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useState, useRef } from 'react';\nimport { cL, cLo, showAttr } from 'utils/util';\nimport { IMouseProps } from 'common';\nimport { RULE_EVENODD, viewBox, TPathDataKey, getPathD, SvgIcon, SvgIconToggle } from 'utils/svg';\nimport { useToggleState, }                         from '@react-stately/toggle';\nimport { useButton, useToggleButton, }             from '@react-aria/button';\nimport { AriaButtonProps, AriaToggleButtonProps, } from '@react-types/button';\n\nexport const twButtonPressed = (isPressed: boolean) => isPressed && \"border border-red-400\";\n\nexport const ButtonPurple = ({ className: cn, ...props }:\n  Partial<IClassNameObj> &\n  AriaButtonProps<React.ElementType>\n) => {\n  const ref = useRef<HTMLButtonElement>(null);\n  const { buttonProps, isPressed } = useButton(props, ref);\n  return (\n    <button\n      {...{ref}}\n      {...buttonProps}\n      {...cLo(\"flex-shrink-0 bg-purple-600 text-base font-bold py-2 px-4\",\n        \"rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2\",\n        \"focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-200 text-white\", cn,\n        twButtonPressed(isPressed)\n      )}\n    >\n      {props.children}\n    </button>\n  );\n}\n\n// Extract the behavior to close(hide) on click as a hook\n// When you need to keep the layout and just hide the window, use \"invisible\"\n// - Dependencies: .Ani_dialog / .Ani_dialog_close in App.scss\n// Usage) const { display, handleClose } = useClose(\"opacity-50\");\n// <div {...cLo(\"...\", display)} onClick={handleClose} >\ntype TOpVariant = 0|5|10|20|25|30|40|50|60|70|75|80|90|95|100;\nexport type THideAttr =\n  | \"hidden\"\n  | \"invisible\"\n  | `opacity-${TOpVariant}`\n  | \"Ani\";\nexport const useClose = (ha: THideAttr = \"Ani\") => {\n  const [close, setClose] = useState(false);\n  const handleClose = () => { setClose(!close); }\n  return ({\n    hide: (ha === \"Ani\")\n      ? `Ani_dialog${close ? \"_close\" : \"\"}`  // css class\n      : (close ? ha : \"\"),\n    handleClose\n  });\n}\n\nexport type TIconKind = 'error'|'ok'|'warn'|'info';\nexport type TIconKindColors = { [K in TIconKind]: stringU };\n// IconButton on the dialog; role=\"button\" shows cursor-pointer\ninterface IIconButtonProps extends Partial<IClassNameObj>, AriaButtonProps<React.ElementType> {\n  kind: TIconKind;\n};\nexport const IconButton = ({\n  kind,\n  className: cn = \"h-10 w-10 border-4\",  // add height, width, text and border colors\n  ...props\n}: IIconButtonProps) => {\n  const colors: TIconKindColors = {\n    error: cL(\"text-red-500 border-red-500 hover:text-red-700 hover:border-red-700\",\n         \"dark:text-yellow-400 dark:border-yellow-400 dark:hover:text-white dark:hover:border-white\"),\n    ok:    cL(\"text-green-500 border-green-500 hover:text-green-700 hover:border-green-700\",\n         \"dark:text-white dark:border-white dark:hover:text-white dark:hover:border-white\"),\n    warn:  cL(\"text-yellow-500 border-yellow-500 hover:text-yellow-700 hover:border-yellow-700\",\n         \"dark:text-white dark:border-white dark:hover:text-white dark:hover:border-white\"),\n    info:  cL(\"text-blue-500 border-blue-500 hover:text-blue-700 hover:border-blue-700\",\n         \"dark:text-white dark:border-white dark:hover:text-white dark:hover:border-white\"),\n  };\n  const ref = useRef<HTMLButtonElement>(null);\n  const { buttonProps } = useButton(props, ref);\n  return (\n    <button\n      {...{ref}}\n      {...buttonProps}\n      {...cLo(\"flex items-center justify-center flex-shrink-0 rounded-full hover:shadow-md\",\n        \"transition duration-300 ease-in-out transform hover:scale-125 focus:outline-none\",\n        colors[kind], cn\n      )}\n    >\n      <svg className=\"w-6 h-6 fill-current\" {...viewBox(20)}>\n        <path {...RULE_EVENODD} d={getPathD((\"ico_\" + kind) as TPathDataKey)} />\n      </svg>\n    </button>\n  );\n}\n/* &times; */\n\nexport const CloseButton = ({\n  className: cn = \"h-4 w-4 border\",\n  ...props\n}: Partial<IClassNameObj> &\n  AriaButtonProps<React.ElementType>) =>\n    <IconButton\n      kind=\"error\"\n      {...props}\n      {...cLo(\"absolute top-0 right-0 mt-1 mr-1 opacity-50 hover:opacity-100\", cn)}\n    />;\n\nexport const SpinningCircle = ({\n  className: cn = \"h-10 w-10 text-white\"\n}: Partial<IClassNameObj>) =>\n  <svg\n    {...cLo(\"animate-spin -ml-1 mr-3\", cn)}\n    fill=\"none\"\n    {...viewBox(24)}\n  >\n    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n    <path className=\"opacity-75\" fill=\"currentColor\" d={getPathD(\"arc_spin\")} />\n  </svg>;\n\n// =========================================\n// Tailwind Colorset Definitions\n// =========================================\n// colorset Text, Focus\nexport const tcsTextFocus = cL(\n  \"dark:text-gray-300 dark:hover:text-white\",\n  \"text-gray-700 hover:text-black\",\n  \"dark:focus:outline-none dark:focus:text-white dark:focus:bg-gray-700\",\n  \"focus:outline-none focus:text-black focus:bg-gray-300\"\n);\n// =========================================\n\nexport type TAngleRotateProps = 'L'|'R'|'U'|'D'; // Left, Right, Up, Down\nexport type TRightAngles      = 0|90|180|-90;\n// direction to angle (degree)\nexport const dirToAngle = (dir: TAngleRotateProps) => {\n  const ANGLE_ROTATION: Record<TAngleRotateProps, TRightAngles> = {\n    'L': 0,\n    'R': 180,\n    'U': 90,\n    'D': -90,\n  };\n  return ANGLE_ROTATION[dir];\n}\n\n// With the left arrow, generate 4 directional arrows\ninterface IButtonRotateProps extends IMouseProps {\n  Path?: TPathDataKey;\n  dir?:  TAngleRotateProps;\n  fill?: string;\n};\nexport const ButtonRotate = ({\n  Path = \"arrow_circle\",\n  dir,\n  fill,\n  onClick\n}: IButtonRotateProps) => {\n  return (\n    <button className=\"p-1 focus:outline-none hover:text-yellow-600\" onClick={onClick}>\n      <SvgIcon\n        className=\"w-5 h-5\"\n        {...{Path}}\n        {...(dir && { Rotate: dirToAngle(dir) })}\n        {...(fill && { fill })}\n      />\n    </button>\n  );\n}\n\ninterface IToggleButtonTextProps extends AriaToggleButtonProps<React.ElementType> {\n  textOn:   string;\n  textOff?: string;\n};\nexport function ToggleButtonText({\n  textOn, textOff,\n  ...props\n}: IToggleButtonTextProps) {\n  const ref = useRef<HTMLButtonElement>(null);  // null is required in TypeScript\n  const state = useToggleState(props);\n  const { buttonProps, isPressed } = useToggleButton(props, state, ref);\n  return (\n    <button\n      {...{ref}}\n      {...buttonProps}\n      {...cLo(\"inline-flex p-1 items-center justify-center\", tcsTextFocus,\n        twButtonPressed(isPressed))}\n    >\n      {state.isSelected ? textOn : textOff}\n    </button>\n  );\n}\n\n// << button\ninterface ISideArrowButtonProps extends AriaToggleButtonProps<React.ElementType> {\n  dir?: TAngleRotateProps;\n};\nexport function SideArrowButton({\n  dir = 'L',\n  ...props\n}: ISideArrowButtonProps) {\n  const ref = useRef<HTMLButtonElement>(null);  // null is required in TypeScript\n  const state = useToggleState(props);\n  const { buttonProps, isPressed } = useToggleButton(props, state, ref);\n  const angle = dirToAngle(dir);\n  return (\n    <button\n      {...{ref}}\n      {...buttonProps}\n      {...cLo(\"border-2 border-transparent rounded-full\", tcsTextFocus,\n        twButtonPressed(isPressed))}\n    >\n      <SvgIcon Rotate={angle} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n    </button>\n  );\n}\n\ninterface INotiIconButtonProps extends AriaToggleButtonProps<React.ElementType> {\n  notis?: number;  // number of unread notifications\n};\nexport function NotiIconButton({\n  notis = 0,\n  ...props\n}: INotiIconButtonProps) {\n  const ref = useRef<HTMLButtonElement>(null);  // null is required in TypeScript\n  props.isSelected = notis > 0;\n  const state = useToggleState(props);\n  const { buttonProps, isPressed } = useToggleButton(props, state, ref);\n  const onStyle = {\n    stroke:      \"red\",\n    strokeWidth: .5,\n    fill:        \"pink\",\n  };\n  return (\n    <button\n      {...{ref}}\n      {...buttonProps}\n      {...cLo(\"p-1 border-transparent rounded-full\", tcsTextFocus,\n        twButtonPressed(isPressed))}\n    >\n      <SvgIcon {...(state.isSelected && onStyle)} Path=\"bell_noti\" />\n      <span\n        {...cLo(\"fixed top-2 ml-3 bg-red-700 text-white rounded-full w-3 h-3 shadow-md text-2xs\",\n          showAttr(notis > 0))}\n      >\n        {notis}\n      </span>\n    </button>\n  );\n}\n\n// Create both on and off state svg and then switch the show and hide attribute only\n// Make sure just the class= toggles not the <svg itself using the Inspector\n// is Menu On (shown)?\nexport function BurgerButton(props: AriaToggleButtonProps<React.ElementType>) {\n  const ref = useRef<HTMLButtonElement>(null);  // null is required in TypeScript\n  const state = useToggleState(props);\n  const { buttonProps, isPressed } = useToggleButton(props, state, ref);\n  return (\n    <button\n      {...{ref}}\n      {...buttonProps}\n      {...cLo(\"inline-flex p-1 items-center justify-center\", tcsTextFocus,\n        twButtonPressed(isPressed))}\n    >\n      <SvgIconToggle\n        cond={state.isSelected}\n        d=\"M6 18L18 6M6 6l12 12\"\n        d2=\"M4 6h16M4 12h16M4 18h16\"\n      />\n    </button>\n  );\n}\n\nexport const Copyright = () =>\n  <p {...cLo(\"mt-2 text-2xs text-right font-serif italic text-center tracking-widest\")}>\n    <span className=\"text-2xs text-gray-400\">(C) {new Date().getFullYear()} </span>\n    <span className=\"text-blue-700\">Space</span>\n    <span className=\"text-green-700\">time</span>\n    <span className=\"text-red-700\">Q</span>\n    <span className=\"text-3xs text-gray-400\"> INC</span>\n  </p>;\n\nexport const consoleLogo = (\n  title: string,\n  contact: string = \"Q@spacetimeq.com\"\n) => {\n  const BGC  = 'background:#ffffe0;';\n  const C_R  = `color:red;${BGC}`;\n  const C_G  = `color:green;${BGC}`;\n  const C_B  = `color:blue;${BGC}`;\n  const C_B2 = 'color:royalblue;';\n  const C_C  = 'font-family:monospace;color:blue;';\n  const C_N  = 'color:darkgray';\n// ASCII ART: http://patorjk.com/software/taag/#p=display&f=Graffiti&t=Type%20Something%20\n  console.log(\"%c╔═╗┌─┐┌─┐┌─┐%c┌─┐┌┬┐┬┌┬┐┌─┐%c╔═╗  %c\" + title + \" - contact:%c\" + contact + '%c',\n              C_B,          C_G,           C_R,   C_N,                      C_C,             C_N);\n  console.log(\"%c╚═╗├─┘├─┤│  %c├┤  │ ││││├┤ %c║═╬╗ %c\" + Date() + '%c',\n              C_B,          C_G,           C_R,   C_B2,           C_N);\n  console.log(\"%c╚═╝┴  ┴ ┴└─┘%c└─┘ ┴ ┴┴ ┴└─┘%c╚═╝╚ %c(C) %cSpace%ctime%cQ%c INC\",\n              C_B,          C_G,           C_R,    C_N, C_B,   C_G, C_R,C_N);\n};\n","/*=============================================================================\n toggleSlider.tsx - toggle UI tools\n\n (C) 2021 SpacetimeQ INC\n=============================================================================*/\nimport { useRef } from 'react';\nimport { cCo, cL, cLo } from 'utils/util';\nimport { twButtonPressed } from 'ui/ui';\nimport { useToggleState, }        from '@react-stately/toggle';\nimport { useToggleButton, }       from '@react-aria/button';\nimport { AriaToggleButtonProps }  from '@react-types/button';\n\n// Toggling Dot button to enable/disable slider\n// On: Prefers Media (Auto, disabled slider) mode, Off: Manual (use slider) mode\nexport interface IToggleDotProps extends AriaToggleButtonProps<React.ElementType> {\n  bgcolors: {\n    on:  TailwindColor<'bg'>,\n    off: TailwindColor<'bg'>\n  }\n};\nexport function ToggleDot({\n  bgcolors,\n  ...props\n}: IToggleDotProps\n) {\n  const ref = useRef<HTMLButtonElement>(null);  // null is required in TypeScript\n  const state = useToggleState(props);\n  const { buttonProps, isPressed } = useToggleButton(props, state, ref);\n  return (\n    <button\n      {...{ref}}\n      role=\"switch\"\n      aria-checked={state.isSelected}\n      tabIndex={0}\n      {...buttonProps}\n      {...cCo(cL(\"w-2.5 h-2.5 rounded-full mr-1.5 Ball-shadow focus:outline-none border border-gray-500\",\n          twButtonPressed(isPressed)),\n        state.isSelected, bgcolors.on, bgcolors.off\n      )}\n    />\n  );\n}\n\n// slider: Change of the position by justify-end cannot be animated with transition.\n// 'translate' of the slider can be animated but how can we figure out the amount?\nexport interface IToggleSliderProps extends AriaToggleButtonProps<React.ElementType> {\n  colors?: string0;       // button colors\n  srOnly?: string0;       // screen reader only\n  size?:   TSizeVariants; // slider/ball size\n};\nexport function ToggleSlider({\n  colors, srOnly, size = 'md',\n  ...props\n}: IToggleSliderProps\n) {\n  const ref = useRef<HTMLButtonElement>(null);  // null is required in TypeScript\n  const state = useToggleState(props);\n  const { buttonProps, isPressed } = useToggleButton(props, state, ref);\n  const sz = {  // size dependent adjustment\n    sm: { slide: \"w-7 h-4\",  ball: \"w-3 h-3\", dx: \"translate-x-3\" },\n    md: { slide: \"w-11 h-6\", ball: \"w-5 h-5\", dx: \"translate-x-5\" },\n    lg: { slide: \"w-14 h-8\", ball: \"w-7 h-7\", dx: \"translate-x-6\" },\n  };\n  return (\n    <button\n      {...{ref}}\n      role=\"switch\"\n      aria-checked={state.isSelected}\n      tabIndex={1}\n      {...buttonProps}\n      {...cLo(\"inline-flex items-center px-0.5 rounded-full\", sz[size].slide,\n        \"transition-colors duration-200 focus:outline-none Inner-shadow\", colors)}\n    >\n      {srOnly && <span className=\"sr-only\">{srOnly}</span>}\n      {props.children}\n      <span\n        {...cLo(\"absolute rounded-full border\",\n          props.isDisabled\n            ? \"border-gray-800 bg-gray-500 Ball-shadow\"\n            : \"border-gray-400 bg-white Ball-shadow\",\n          \"transition transform duration-300 ease-in-out\",\n          state.isSelected && sz[size].dx, sz[size].ball,\n          twButtonPressed(isPressed)\n        )}\n        style={{ transformOrigin: \"50% 50% 0px\" }}\n      />\n    </button>\n  );\n}\n","/*=============================================================================\n toggleDark.tsx - description\n\n - Removed useState from the button, let the parent keep and handle the state:\n   stateless buttons\n - Just propagate onClick event, a callback from the parent\n - using React ContextAPI, let the <ToggleDarkButton> be active in itself\n\n (C) 2020 SpacetimeQ INC\n=============================================================================*/\nimport { useDarkThemeCtx } from 'app/darkThemeCtx';\nimport { cL, cLo } from 'utils/util';\nimport { RULE_EVENODD, squareView, getPathD, SvgIconFull, } from 'utils/svg';\nimport { ToggleDot, IToggleSliderProps, ToggleSlider } from 'ui/toggleSlider';\n\n// Left Button switch to enable/disable \"media\" mode (that prefers media)\n// ToggleSlider to force \"dark\"/\"light\" mode\nexport const ToggleDarkButton = ({\n  className: cn,\n  colors    = \"bg-gray-500\",\n  size      = 'md',\n}: Partial<IClassNameObj> &\n  Pick<IToggleSliderProps, 'colors'|'size'>\n) => {\n  const {\n    dark,   // is dark mode?\n    media,  // prefers media mode?\n    night,  // is it night? (in prefers media mode)\n    toggle  // toggle dark callback\n  } = useDarkThemeCtx();  // checks both LocalStorage.theme and prefers-color-scheme\n  const stopCls = \"transition-colors duration-200\";\n  const len = {  // sun and moon icon sizes\n    sm: { light: 20, dark: 16 },\n    md: { light: 24, dark: 20 },\n    lg: { light: 28, dark: 24 },\n  };\n  return (\n    <span {...cLo(\"flex items-center\", cn)}>\n      <ToggleDot\n        bgcolors={{\n          on: \"bg-gray-200\",\n          off: night ? \"bg-red-500\" : \"bg-green-400\"\n        }}\n        isSelected={media}\n        onPress={() => toggle(media)}\n      />\n      <ToggleSlider\n        isDisabled={media}\n        isSelected={dark}\n        onPress={() => toggle()}\n        srOnly=\"Dark mode switch\"\n        colors={media ? cL(colors, \"opacity-50\") : colors}\n        size={size}\n      >\n        <SvgIconFull\n          {...cLo(stopCls, \"mx-1 dark:text-yellow-200 text-gray-500\")}\n          {...squareView(len[size].dark)}\n          Path=\"moon_dark\"\n          fill=\"currentColor\"\n        />\n        <svg {...squareView(len[size].light, 32)} fill=\"none\">\n          <path {...RULE_EVENODD} fill=\"url(#lG_light)\" d={getPathD(\"sun_light\")} />\n          <defs>\n            <linearGradient id=\"lG_light\" x1=\"2\" y1=\"2\" x2=\"30\" y2=\"30\" gradientUnits=\"userSpaceOnUse\">\n              <stop className={stopCls} stopColor={dark ? \"#d4d4d8\" : \"#FACC15\"} />\n              <stop className={stopCls} stopColor={dark ? \"#d4d4d8\" : \"#FA9D16\"} offset=\"1\" />\n            </linearGradient>\n          </defs>\n        </svg>\n      </ToggleSlider>\n    </span>\n  );\n}\n\n// button - needs customization for the following non-default tailwind classes\n//  focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-white focus-visible:ring-gray-500\n//  button style={{backgroundColor: dark ? \"rgb(17,24,39)\" : \"rgb(96,211,96)\"}}\n","export default __webpack_public_path__ + \"static/media/Qlogo.97681b2e.png\";","/*=============================================================================\n Navbar.tsx - Navigation Bar Menu\n\n - fixed (position: fixed;) prevents the scrolling out of the top navbar\n - then insert <div className=\"h-10\" /> to compensate for the relative height\n - To prevent menu text wrapping, use whitespace-nowrap\n\n (C) 2021 SpacetimeQ INC\n=============================================================================*/\n//import { useState } from 'react';\n//import { NavLink }          from 'react-router-dom';\n//import { RouteMenus }       from './Routes';\nimport { ToggleDarkButton } from 'ui/toggleDark';\nimport { cLo, dbg } from 'utils/util';\n//import { NotiIconButton } from 'ui/ui';\nimport logo2 from '../../assets/Qlogo.png'\n\nexport default function Navbar() {\n  //const [notis, setNotis] = useState<number>(12);  // notifications count\n  return (<>\n    <nav\n      {...cLo(\"fixed flex flex-col z-20 w-full h-14 shadow-lg\",\n        \"dark:bg-gray-600 dark:text-gray-100\",\n        \"bg-gray-200 text-gray-800\")}\n    >\n        {/* <div {...cLo('hidden sm:block')} > \n        \n      <ul {...cLo(\"ml-24 w-3/4 flex justify-center items-center\", dbg(\" border-red-800\"))}>\n        {RouteMenus.filter(r => r.level === 0).map(m =>\n          <li key={m.to} {...cLo(\"mt-2 whitespace-nowrap\", dbg(\"border border-dashed border-blue-400\"))}>\n            <NavLink\n              exact to={m.to}\n              activeClassName=\"bg-black text-white rounded-md p-1\"\n              {...cLo(dbg(\"border border-pink-400\"))}\n            >\n              {m.title}\n            </NavLink>\n          </li>\n        )}\n      </ul>\n      </div> */}\n\n      <div className='mt-3 ml-4 flex flex-row'>\n      <img className='h-8' src={logo2} alt='logo' />\n      <h1 className='mt-1 ml-4 uppercase font-semibold text-lg'>SpacetimeQ</h1>\n      </div>\n      <div className=\"mt-2 absolute top-1 right-0 flex flex-row\">\n        {/* <NotiIconButton\n          notis={notis}\n          isSelected={notis > 0}\n          onPress={() => setNotis(notis > 0 ? notis - 1: 0)}\n        /> */}\n        <ToggleDarkButton className=\"mx-2 my-1\" />\n\n      </div>\n    </nav>\n    <div className=\"h-10\" />\n  </>);\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport Qlogo from '../../assets/Qlogo.png'\n\n\n\n\nexport const Footer = () => {\n    return (\n    <div className='mt-6  sm:hidden'>\n    <footer className=\"footer relative pt-1 border-b-2 border-blue-700 ring-2 ring-brown-400 rounded\">\n        <div className=\"flex flex-col lg:flex-row  p-4 \">\n            <div className=\"w-full flex mt-6\">\n                <div className='w-5/12 hidden md:block'>\n                    <div className='flex flex-col'>\n                        <div className='flex flex-row'>\n                            <div className='flex ml-4  justify-center items-center'>\n                            <img className='mx-8 w-20 opacity-50' src={Qlogo} alt='logo'/>\n                            </div>\n\n                            <div className='ml-6 mt-2'>\n                                <h1 className='font-semibold uppercase'>SpacetimeQ Inc.</h1>\n                                <p className='text-sm mt-1'> 416 Santander Dr. San Ramon CA, 94518 USA</p>\n                                <p className='text-sm mt-2'>R&D Office in Japan</p>\n                                <p className='text-sm mt-1'> Ocean Gate Minatomirai 8F 3-7-1 Minatomirai, </p>\n                                <p className='text-sm mt-1'> Nishi-ku,Yokohama 220-0012, JAPAN</p>\n\n                            </div>\n                        </div>\n\n                        <div className='px-1 mt-6 ml-40 md:w-48 lg:w-96  flex justify-around text-xl '>\n                            <i className=\"fab fa-facebook-square\"></i>\n                            <i className=\"mx-3 fab fa-google\"></i>\n                            <i className=\"mx-3 fab fa-instagram\"></i>\n                            <i className=\"mx-3 fab fa-github\"></i>\n                            <i className=\"ml-3 mr-8 fab fa-twitter-square\"></i>\n                        </div>                    \n                    </div>\n\n                    \n                </div>\n            </div>\n        </div>\n\n        <div className=\"container mx-auto px-6\">\n            <div className=\"mt-8 border-t-2 border-gray-300 flex flex-col items-center\">\n                <div className=\"sm:w-2/3 text-center py-6\">\n                    <p className=\"text-sm  font-bold mb-2\">\n                        © 2021 SpacetimeQ Inc.\n                    </p>\n                </div>\n            </div>\n        </div>\n    </footer>\n\n\n    \n    </div>\n    )\n}\n\n\nconst Footer2 = () => {\n    return (\n    <div>\n\n \n    <div className='mt-6 hidden md:block'>\n    <footer className=\"footer relative pt-1 border-b-2 border-blue-700 ring-2 ring-brown-400 rounded\">\n        <div className=\"flex flex-col lg:flex-row  p-4 \">\n            <div className=\"w-full flex mt-6\">\n                <div className='lg:w-6/12 xl:w-7/12'>\n                    <div className='flex flex-col'>\n                        <div className='flex flex-row'>\n                            <div className='flex ml-4  justify-center items-center'>\n                            <img className='mx-4 w-20 opacity-50' src={Qlogo} alt='logo'/>\n                            </div>\n\n                            <div className='ml-6 mt-2 lg:mt-8'>\n                                <h1 className='font-semibold uppercase'>SpacetimeQ Inc.</h1>\n                                <p className='text-sm mt-1'> 416 Santander Dr. San Ramon CA, 94518 USA</p>\n\n                                <p className='text-sm mt-6'>R&D Office in Japan</p>\n                                <p className='text-sm mt-1'> Ocean Gate Minatomirai 8F 3-7-1 Minatomirai, </p>\n                                <p className='text-sm mt-1'> Nishi-ku,Yokohama 220-0012, JAPAN</p>\n\n                            </div>\n                        </div>\n\n                        <div className='px-1 mt-6 lg:ml-32 md:w-48 lg:w-72 xl:w-96 flex justify-around text-xl '>\n                            <i className=\"opacity-30 fab fa-facebook-square\"></i>\n                            <i className=\"opacity-30 fab fa-google\"></i>\n                            <i className=\"opacity-30 fab fa-instagram\"></i>\n                            <i className=\"opacity-30 fab fa-github\"></i>\n                            <i className=\"opacity-30 fab fa-twitter-square\"></i>\n                        </div>                    \n                    </div>\n\n                    \n                </div>\n\n                    <div className=\"w-full lg:w-6/12 xl:w-7/12 mt-8 mr-4 flex flex-col md:flex-row justify-around\">\n                        <div className=\"flex flex-col\">\n                            <span className=\"font-bold text-brown-500 uppercase mb-2\">Solution</span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"  text-md \">E-Commerce</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"  text-md \">STQ Navigator </Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"  text-md \">Dashboard</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"  text-md \">Insight</Link></span>\n                        </div>\n                        <div className=\"flex flex-col\">\n                            <span className=\"font-bold text-brown-500 uppercase mt-4 md:mt-0 mb-2\">Support</span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Pricing</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Documentation</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Guides</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">API Status</Link></span>\n                        </div>\n                        <div className=\"flex flex-col\">\n                            <span className=\"font-bold text-brown-500 uppercase mt-4 md:mt-0 mb-2\">Company</span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">About</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Blog</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Jobs</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Press</Link></span>\n                        </div>\n                        <div className=\"flex flex-col\">\n                            <span className=\"font-bold text-brown-500 uppercase mt-4 md:mt-0 mb-2\">Legal</span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Claim</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Privacy</Link></span>\n                            <span className=\"my-2\"><Link to=\"#\" className=\"opacity-30 italic text-md \">Terms</Link></span>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        <div className=\"container mx-auto px-6\">\n            <div className=\"mt-8 border-t-2 border-gray-300 flex flex-col items-center\">\n                <div className=\"sm:w-2/3 text-center py-6\">\n                    <p className=\"text-sm  font-bold mb-2\">\n                        © 2021 SpacetimeQ Inc.\n                    </p>\n                </div>\n            </div>\n        </div>\n    </footer>\n\n    </div>  \n\n    <div className='md:hidden'>\n        <div className=' flex flex-col ring-2 ring-brown-400 rounded'>\n            <div className='flex flex-col'>\n                <div className='flex ml-1 mt-8 mb-4  justify-center items-center'>\n                    <img className='mx-8 w-16 opacity-50' src={Qlogo} alt='logo'/>\n                </div>\n\n                <div className='ml-2 mt-2 text-center'>\n                    <h1 className='font-semibold uppercase'>SpacetimeQ Inc.</h1>\n                    <p className='text-sm mt-1'> 416 Santander Dr. San Ramon CA, 94518 USA</p>\n\n                    <p className='text-sm mt-2'>R&D Office in Japan</p>\n                    <p className='text-sm mt-1'> Ocean Gate Minatomirai 8F 3-7-1 Minatomirai, </p>\n                    <p className='text-sm mt-1'> Nishi-ku,Yokohama 220-0012, JAPAN</p>\n\n                </div>\n            </div>\n\n            <div className='px-12 my-6 w-full flex justify-around text-xl text-center'>\n                <i className=\"fab fa-facebook-square\"></i>\n                <i className=\"fab fa-google\"></i>\n                <i className=\"fab fa-instagram\"></i>\n                <i className=\"fab fa-github\"></i>\n                <i className=\"fab fa-twitter-square\"></i>\n            </div>                    \n        \n            <div className=\"container mx-auto px-6\">\n                <div className=\"mt-8 border-t-2 border-gray-300 flex flex-col items-center\">\n                    <div className=\"sm:w-2/3 text-center py-6\">\n                        <p className=\"text-sm  font-bold mb-2\">\n                            © 2021 SpacetimeQ Inc.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n \n    </div>\n    )\n}\n\nexport default Footer2\n","import React from 'react'\nimport SpeakerNotesIcon from '@material-ui/icons/SpeakerNotes'\nimport BlurCircularIcon from '@material-ui/icons/BlurCircular';\n//import ScheduleIcon from '@material-ui/icons/Schedule';\n\nconst Features = () => {\n    return (\n        <div>\n            <div className=\" p-4 grid grid-cols-1  lg:grid-cols-2 xl:grid-cols-2  gap-8 justify-items-center\">\n           \n                    <div className='w-full    flex flex-col justify-start ring-2 ring-brown-400 rounded'>\n                        <div className='px-8 py-4 lg:h-32  dark:bg-gray-800 bg-gray-300 rounded-t-md'>\n                            <span className='text-xl'>\n                                <BlurCircularIcon className='' style={{ fontSize: 40 }} />\n                            </span>\n                            <h1 className='mt-2 text-xl text-center lg:text-left'>\n                                SpaceTime Calendar\n                            </h1>\n                        </div>\n                        <div className='px-8 pt-4 pb-8 flex flex-row justify-around text-center lg:text-left'>\n                        Spacetime Calendar provides truly beautiful, featuring elegant web services to recreate the flexible \n                        viewer of personal schedule in an online form. That means you can use each day's slot in a variety of ways, \n                        including sharing your notes with other users and work on them collaboratively. Also, this app collaborates with \n                        important public holidays and event information base on international locale.              \n                        </div>\n                    </div>\n\n          \n                    <div className='w-full flex flex-col justify-center ring-2 ring-brown-400 rounded'>\n                        <div className='px-8 py-4 lg:h-32 dark:bg-gray-800 bg-gray-300 rounded-t-md'>\n                            <span className='text-xl'>\n                                <SpeakerNotesIcon className='' style={{ fontSize: 40 }} />\n                            </span>\n                            <h1 className='text-xl text-center lg:text-left'>\n                                Kanban Card System integrated with Zettelkasten Method                           \n                            </h1>\n                        </div>\n                        <div className='px-8 pt-4 pb-8 flex flex-row justify-around'>\n                            Kanban Card System works as a system, how to create notes, how to connect notes to make a web of \n                            knowledge, and how to create structures so you stay in control of the growing personal data\n                            management like favorite links, pictures, and other information on the web. Also, it is about \n                            optimizing your workflow of learning and producing \n                            knowledge, creating value-added data for a better online lifestyle. \n                        </div>\n                \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Features\n","export default __webpack_public_path__ + \"static/media/cus.bd5085f7.png\";","export default __webpack_public_path__ + \"static/media/c1.62d99239.png\";","export default __webpack_public_path__ + \"static/media/firebase.7840999a.svg\";","export default __webpack_public_path__ + \"static/media/react.0b093e51.svg\";","export default __webpack_public_path__ + \"static/media/nodejs.e8ae1f19.svg\";","export default __webpack_public_path__ + \"static/media/redux.71eb13e2.svg\";","export default __webpack_public_path__ + \"static/media/webrtc.514908ac.svg\";","export default __webpack_public_path__ + \"static/media/ts.9ad81d2e.svg\";","export default __webpack_public_path__ + \"static/media/tailwindcss.338a655a.svg\";","export default __webpack_public_path__ + \"static/media/sass.2dd903aa.svg\";","import React from 'react'\nimport firebase from '../../assets/tech/firebase.svg'\nimport reactsvg from '../../assets/tech/react.svg'\nimport nodejs from '../../assets/tech/nodejs.svg'\nimport redux from '../../assets/tech/redux.svg'\nimport webrtc from '../../assets/tech/webrtc.svg'\nimport ts from '../../assets/tech/ts.svg'\nimport tailwindcss from '../../assets/tech/tailwindcss.svg'\nimport sass from '../../assets/tech/sass.svg'\n\nconst Tech = () => {\n    return (\n        <div className='flex flex-col w-full  justify-center items-center'>\n            <div className='flex flex-row h-18'>\n                <img className='w-16 h-16 m-2' src={reactsvg} alt='react' /> \n                <img className='w-16 h-16 m-2' src={redux} alt='redux' />\n                <img className='w-14 h-16 m-2' src={firebase} alt='firebase' />\n                <img className='w-16 h-16 m-2' src={ts} alt='ts' />\n            </div>\n\n            <div className='flex flex-row h-18'>\n                <img className='w-16 h-16 m-2' src={nodejs} alt='nodejs' />\n                <img className='w-16 h-16 m-2' src={webrtc} alt='webrtc' />\n                <img className='w-16 h-16 m-2' src={tailwindcss} alt='tailwindcss' />\n                <img className='w-16 h-16 m-2' src={sass} alt='sass' />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Tech\n","import React from 'react'\n//import {Link} from 'react-router-dom'\nimport Footer2 from './Footer2'\nimport Features from './Features'\n//import cc2 from '../assets/cc2.png'\nimport cus from '../../assets/cus.png'\nimport main1 from '../../assets/c1.png'\nimport Tech from './Tech'\n//import CompanyProfile from './CompanyProfile'\n\n//import {Frame, Page, useCycle, Scroll, useMotionValue, useTransform } from 'framer'\n\n//import BestSellers from '../components/home/BestSellers'\n//import NewArrivals from '../components/home/NewArrivals'\n//import BestItmes from '../components/home/BestItems'\n//import SubCategoryList from '../components/subcategory/SubCategoryList'\n\n//import CategoryList from '../components/category/CategoryList'\n//import back1 from '../assets/wallpaper01.jpg'\n//import logo from '../assets/logo.png'\n\n\nconst Home = () => {\n  \n  const cc_pic = 'https://i2.wp.com/www.adobomagazine.com/wp-content/uploads/2019/11/fb-hero.jpg?resize=1068%2C561&ssl=1' \n  const vc_pic = 'https://miro.medium.com/max/700/1*RSClt6Kr5u943UaLPgHeZg.png' \n  //const tc_pic =  'https://miro.medium.com/max/700/1*tijYDzC59_wasLntTiBeSg.png' \n  //const tc_pic2 =  'https://cdn-media-1.freecodecamp.org/images/1*gILubZM4zMQnVf4CAm-NSA.jpeg' \n\n  const basic_pic2 = 'https://www.whisbi.com/wp-content/uploads/2016/11/old-blog-18.jpg' \n  // const basic_pic3 = 'https://cdn.business2community.com/wp-content/uploads/2016/12/Untitled-300x180.png.png' \n  // const basic_pic4 = 'https://res.cloudinary.com/stq/image/upload/v1608016511/cqlxohl8sqjidopnulg6.jpg' \n  // const basic_pic5 = 'https://res.cloudinary.com/stq/image/upload/v1608017534/r1qaub3yohlzyoioklks.jpg' \n  // const basic_pic6 = 'https://res.cloudinary.com/stq/image/upload/v1608017404/vzpmugzhxpqm8ptld7r7.jpg' \n\n \n\n    return (\n\n      <div className='relative w-full dark:text-gray-200'>\n\n   \n  \n      <section className=\"relative flex justify-center w-full p-4\">\n\n          <div className=' md:w-full lg:max-w-7xl w-full '>    \n         \n            <div className=\"flex flex-col md:flex-row lg:h-72 mt-4 p-4 ring-2 ring-brown-400 w-full mb-8 rounded\">\n                <div className=' flex flex-col justify-center md:ml-8'>\n                <h1 className='p-4 w-full text-xl md:text-3xl opacity-100 text-center lg:text-left'> \n                <span className='font-semibold'>STQM</span> is a next-generation messaging and chatting platform\n                </h1>\n                <p className='p-4 md:text-xl'> \n                SpacetimeQ provides a powerful, easy-to-use, web-based messaging and chatting platform developed by the advanced react\n                design system with Firebase, Redux toolkit, Node.js, and typescript. Our solutions and services will truly integrate into \n                the web ecosystem for all users and businesses to make their online life better.\n                </p>\n                {/* <a href='https://api.spacetimeq.com:2130/'> \n                    <button className='w-48 m-4 py-2 my-4 md:py-3 ring-2 ring-gray-400 lg:mr-6\n                                    dark:hover:bg-blue-900 dark:hover:ring-brown-200 uppercase rounded'>\n                        Try Trial\n                    </button>\n                </a> */}\n                </div>\n\n            </div>\n    \n            <div className=\"flex flex-col md:flex-row lg:h-72 p-4 ring-2 ring-brown-400 w-full mb-8 rounded\">\n                <div className='w-full md:w-1/2  flex flex-col lg:flex-row items-center justify-around sm:my-4  lg:mr-8'>\n                <Tech />\n                </div>\n                <div className='md:w-1/2 flex flex-col justify-center md:ml-8'>\n\n                <span className='text-center md:text-left text-xl font-semibold lg:text-3xl my-4'> \n                Modern Scalable Web Technologies\n                </span>\n              </div>\n\n\n            </div>\n\n            <div className=\"flex flex-col md:flex-row  p-4 ring-2 ring-brown-400 w-full mb-8 rounded\">\n              <div className='md:w-1/2 flex flex-col justify-center md:ml-8'>\n                <h1 className='text-center md:text-left text-lg md:text-2xl'> \n                  The Best platform for \n                </h1>\n                <span className='text-center mb-4 md:text-left text-xl font-semibold lg:text-3xl'> \n                    Conversational Commerce\n                </span>\n                <p className='mt-2 mr-8 mb-2 text-center md:text-left lg:text-lg'>\n                refers to the intersection of messaging apps and shopping. Meaning, the trend toward interacting \n                with businesses through messaging and chat apps\n                </p>\n              </div>\n\n              <div className='md:w-1/2 mb-8 mt-8 flex flex-col lg:flex-row items-center justify-around  lg:mr-8'>\n\n                    <img className='h-56 mt-4 lg:h-64 rounded-lg' src={cc_pic} alt='ccmmrce pic' />\n    \n              </div>\n            </div>\n\n            <div className=\"flex flex-col md:flex-row  p-4 ring-2 ring-brown-400 w-full mb-8 rounded\">\n\n\n                <div className='w-full md:w-1/2  flex flex-col lg:flex-row items-center justify-around sm:my-8 lg:mr-8'>\n                <img className='p-2  h-72 lg:h-72 rounded-lg' src={vc_pic} alt='ccmmrce pic' />\n                </div>\n\n                <div className='w-full md:w-1/2 flex flex-col justify-center md:ml-8'>\n                    <h1 className='text-center md:text-left  text-lg md:text-2xl'> \n                    Integrated with\n                    </h1>\n                    <span className='text-center md:text-left text-xl font-semibold lg:text-3xl'> \n                       PC & Mobile Video Live Commerce\n                    </span>\n                    <p className='mb-4 text-center md:text-left'>\n                        like TV Home Shopping Channel\n                    </p>\n\n                    <p className='mt-2 mr-8 text-lg text-center md:text-left'>\n                    It used to describe the combination of streaming video and e-commerce, promises to revolutionize the retail \n                    industry and consumer shopping habits. Here’s a rundown of how the live & video commerce is taking shape, trends in the retail\n                    space\n                    </p>\n                </div>\n            </div>\n\n\n            <div className=\"w-full flex flex-col   ring-2 ring-brown-400 mb-8 rounded\">\n\n              <div className='flex flex-col md:flex-row'>\n \n\n                <div className='lg:ml-16 w-full m-1 lg:w-6/12'>\n\n                <h1 className='text-center lg:text-left mt-8 mr-4 text-md  md:text-2xl'>\n                  A beautiful, elegant, and fun visual presentation \n                </h1>\n                <h1 className='md:text-3xl font-semibold mb-4  text-center lg:text-left uppercase'>\n                STQ Web Navigator         \n                </h1>\n\n                <p className='text-md lg:text-lg text-center mr-8 lg:text-left mb-4'>\n                We are building STQ(Space, Time, Cube) Web Navigator. It is a beautiful, elegant, and fun visual presentation \n                and personal data and assets management tool. Its presentation consists of Space & Time Calendar, My Life-Spectrum \n                Scheduler, and Kanban Card System integrated with Zettelkasten Method. \n                </p>\n\n                <p className='text-md text-center lg:text-left lg:text-lg mb-8 mr-8'>\n                STQ Navigator will gather and manage all users’ data, and\n                preferences based on relational links, locations and time. It is also a platform by which users can select a location\n                and time-related events or information that they want to see. \n                </p>\n\n                </div>\n\n                <div className='w-full lg:w-6/12 mb-8 mt-8  flex flex-col justify-center items-center'>\n                  <img className='h-48 w-96 rounded-lg' src={basic_pic2} alt='ccmmrce pic' />\n                  <img className='h-48 w-96 rounded-lg' src={cus} alt='ccmmrce pic' />\n                </div> \n              </div>\n\n            </div>\n\n            <div className=\"w-full flex flex-col justify-center items-center  ring-brown-400 mb-4 rounded\">\n              <Features />\n            </div>\n\n            <div className=\"mt-8 flex flex-col lg:flex-row  p-4 ring-2 ring-brown-400 w-full mb-8 rounded\">\n                <div className='w-full lg:w-6/12  flex flex-col lg:flex-row items-center justify-center'>\n                    <img className='my-8 rounded-xl h-72  ' src={main1} alt='ccmmrce pic' />\n                </div>\n                <div className='w-full lg:w-6/12 flex flex-col justify-center md:ml-8'>\n                    <h1 className='md:ml-8 mt-8  w-full text-xl md:text-3xl text-center lg:text-left opacity-100'> \n                    About SpacetimeQ Inc,\n                    </h1>\n                    <p className='md:ml-8  mt-4 mr-4 mb-4 text-sm md:text-lg text-center lg:text-left'> \n                    SpacetimeQ Inc provides a chatting and messaging platform that unleashes the creative genius inside everyone. \n                    STQ’s platform makes it easy to use, make diversify the online community by chatting and messaging platform with \n                    several dynamic tools. Also, this platform provides conversational e-commerce and video live e-commerce functionalities \n                    for businesses and customers to sell various styles of goods and services. SpacetimeQ Inc. was founded by Soomin Kim and \n                    James Chung in 2018. The headquarter is located in San Ramon California, and Research and development office is \n                    located in Yokohama Japan.\n                    </p>\n                </div>\n\n            </div>\n\n            <Footer2 />\n            </div>\n\n \n        </section>\n      </div>\n\n\n\n    )\n}\n\nexport default Home","/*=============================================================================\n Routes.tsx - Route Definitions for Menu Labels and Components\n\n - used by <NavLink> and <Route>\n - Not all route paths are mapped to the menu,\n   but all route paths should have a handling component\n\n (C) 2021 SpacetimeQ INC\n=============================================================================*/\nimport { RouteProps } from 'react-router-dom';\n// ----------------------------------------------------------------------------\n// Components for each routed page\n// ----------------------------------------------------------------------------\n// import BasicPage   from 'app/BasicPage';\n// import MoreForms   from 'app/MoreForms';\n// import DnDFiles    from 'app/DnDFiles';\n// import DnDFilesLib from 'app/DnDFilesLib';\n// import DnDItems    from 'app/DnDItems';\n// import DnDKanban   from 'app/DnDKanban';\n// import CamTest     from 'app/CamTest';\n// import LocLab      from 'app/LocLab';\n// import Avatars     from 'app/Avatars';\n//import Quiz        from 'app/Quiz';\nimport Home           from 'app/home/Home';\n// import Chat           from 'app/Chat/chat';\n// import Users           from 'app/users/users';\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// All Route paths\n// ----------------------------------------------------------------------------\nconst ROUTES = {\n  root:      \"/\",\n  // moreforms: \"/moreforms\",\n  // dndflib:   \"/dndflib\",\n  // dndfiles:  \"/dndfiles\",\n  // dnditems:  \"/dnditems\",\n  // dndkanban: \"/dndkanban\",\n  // webcam:    \"/webcam\",\n  // loclab:    \"/loclab\",\n  // avatars:   \"/avatars\",\n  // quiz:      \"/quiz\",\n  // chat:      \"/chat\",\n  // users:      \"/users\",\n};\n\n// ----------------------------------------------------------------------------\n// Route - Component map for react-router's <Route>\n// All routes should have a mapped component.\n// ----------------------------------------------------------------------------\nexport const RouteCompos: Partial<RouteProps>[] = [\n  { path: ROUTES.root,      children: <Home   /> },\n  // { path: ROUTES.chat,      children: <Chat       /> },\n  // { path: ROUTES.users,      children: <Users       /> },\n  // { path: ROUTES.moreforms, children: <MoreForms   /> },\n  // { path: ROUTES.dndflib,   children: <DnDFilesLib /> },\n  // { path: ROUTES.dndfiles,  children: <DnDFiles    /> },\n  // { path: ROUTES.dnditems,  children: <DnDItems    /> },\n  // { path: ROUTES.dndkanban, children: <DnDKanban   /> },\n  // { path: ROUTES.webcam,    children: <CamTest     /> },\n  // { path: ROUTES.loclab,    children: <LocLab      /> },\n  // { path: ROUTES.avatars,   children: <Avatars     /> },\n  // { path: ROUTES.quiz,      children: <Quiz        /> },\n];\n\n// ----------------------------------------------------------------------------\n// Route - Menu map for react-router's <Link> or <NavLink>\n// Some routes can be linked to the menu.\n// level: to filter menus\n// ----------------------------------------------------------------------------\nexport const RouteMenus = [\n  { to: ROUTES.root,      title: \"Home\",      level: 0},\n  // { to: ROUTES.chat,      title: \"Chat\",      level: 0},\n  // { to: ROUTES.users,      title: \"Users\",      level: 0},\n  // { to: ROUTES.moreforms, title: \"More Forms\",     level: 1},\n  // { to: ROUTES.dndflib,   title: \"react-dropzone\", level: 0},\n  // { to: ROUTES.dndfiles,  title: \"DnD Files\",      level: 1},\n  // { to: ROUTES.dnditems,  title: \"DnD Items\",      level: 0},\n  // { to: ROUTES.dndkanban, title: \"Kanban\",         level: 0},\n  // { to: ROUTES.webcam,    title: \"Webam\",          level: 0},\n  // { to: ROUTES.loclab,    title: \"LocLab\",         level: 1},\n  // { to: ROUTES.avatars,   title: \"Avatars\",        level: 1},\n  // { to: ROUTES.quiz,      title: \"Quiz\",           level: 1},\n];\n","/*=============================================================================\n Layout.tsx - layout\n\n -------------------------------------------------------------------------\n | = | <Navbar>\n -------------------------------------------------------------------------\n | <Sidebar> | <Main>\n |           |\n\n - <Sidebar> can be opened in two modes:\n   1. overlapped mode (dimming underlying contents)\n   2. push mode: pushing the main contents (without dimming)\n\n - Let <Sidebar> handle the effects of other elements such as dimming and pushing away:\n   so need to hand over the ref of <Main> to <Sidebar>\n\n (C) 2021 SpacetimeQ INC.\n=============================================================================*/\nimport { useRef } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect, } from 'react-router-dom';\nimport Navbar  from './Navbar';\n//import Sidebar from './Sidebar';\nimport { RouteCompos } from './Routes';\n\n// const BandSpacetimeQ = () =>\n//   <h1 className=\"dark:text-yellow-400 dark:bg-gray-800 text-black bg-gray-200 font-mono font-extrabold text-lg text-center p-1 mb-1\">\n//     <span className=\"dark:text-blue-400 text-blue-700 Text-shadow\">Space</span>\n//     <span className=\"dark:text-green-400 text-green-700 Text-shadow\">time</span>\n//     <span className=\"dark:text-red-400 text-red-700 Text-shadow\">Q</span>\n//     <span className=\"ml-2 text-center font-normal font-mono dark:text-yellow-400 text-gray-800\">\n//       - UI Themes Lab (tailwindcss / sass)\n//     </span>\n//   </h1>;\n\nexport default function Layout() {\n  const ref = useRef<HTMLDivElement>(null);  // allow <Sidebar> to handle <div> with ref\n  return (\n    <BrowserRouter>\n  \n      <Navbar />\n      {/* <Sidebar refPush={ref} /> */}\n      <div\n        {...{ref}}\n        className=\"transform transition-spacing ease-in-out duration-300 sm:duration-500\"\n      >\n\n        <Switch>\n          {RouteCompos.map((rt, i) => <Route key={i} exact path={rt.path}>{rt.children}</Route>)}\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n   \n    </BrowserRouter>\n  );\n}\n","/*=============================================================================\n App.tsx - App Main\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport 'styles/App.scss';\nimport Layout from 'ui/layout/Layout';\nimport { DarkThemeProvider, } from './darkThemeCtx';\n\nfunction App() {\n  return (\n    <DarkThemeProvider>\n      <Layout />\n    </DarkThemeProvider>\n  );\n}\n\nexport default App;\n// Application must be wrapped in an OverlayProvider so that it can be\n// hidden from screen readers when a modal opens.\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'out/tailwind.o.css';\nimport App from 'app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}